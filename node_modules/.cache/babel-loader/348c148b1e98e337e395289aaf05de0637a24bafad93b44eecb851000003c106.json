{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\common\\\\ProfileContent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ProfileData } from \"./ProfileData\";\nimport { graphConfig, loginRequest } from \"../../config/authConfig\";\nimport { useMsal } from \"@azure/msal-react\";\n\n/**\r\n * Attaches a given access token to a MS Graph API call. Returns information about the user\r\n * @param accessToken\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport async function callMsGraph(accessToken) {\n  const headers = new Headers();\n  const bearer = `Bearer ${accessToken}`;\n  headers.append(\"Authorization\", bearer);\n  const options = {\n    method: \"GET\",\n    headers: headers\n  };\n  return fetch(graphConfig.graphMeEndpoint, options).then(response => response.json()).catch(error => console.log(error));\n}\n\n/**\r\n * Renders information about the signed-in user or a button to retrieve data about the user\r\n */\nconst ProfileContent = () => {\n  _s();\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const [graphData, setGraphData] = useState(null);\n  function RequestProfileData() {\n    // Silently acquires an access token which is then attached to a request for MS Graph data\n    instance.acquireTokenSilent({\n      ...loginRequest,\n      account: accounts[0]\n    }).then(response => {\n      callMsGraph(response.accessToken).then(response => setGraphData(response));\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"card-title\",\n      children: [\"Welcome \", accounts[0].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), graphData ? /*#__PURE__*/_jsxDEV(ProfileData, {\n      graphData: graphData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: RequestProfileData,\n      children: \"Request Profile Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ProfileContent, \"Yv9iIfg/KlJUHiV6HxvMaVu16s0=\", false, function () {\n  return [useMsal];\n});\n_c = ProfileContent;\nexport default ProfileContent;\nvar _c;\n$RefreshReg$(_c, \"ProfileContent\");","map":{"version":3,"names":["React","useState","ProfileData","graphConfig","loginRequest","useMsal","jsxDEV","_jsxDEV","Fragment","_Fragment","callMsGraph","accessToken","headers","Headers","bearer","append","options","method","fetch","graphMeEndpoint","then","response","json","catch","error","console","log","ProfileContent","_s","instance","accounts","graphData","setGraphData","RequestProfileData","acquireTokenSilent","account","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/common/ProfileContent.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { ProfileData } from \"./ProfileData\";\r\nimport { graphConfig, loginRequest } from \"../../config/authConfig\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\n\r\n/**\r\n * Attaches a given access token to a MS Graph API call. Returns information about the user\r\n * @param accessToken\r\n */\r\nexport async function callMsGraph(accessToken: string) {\r\n  const headers = new Headers();\r\n  const bearer = `Bearer ${accessToken}`;\r\n\r\n  headers.append(\"Authorization\", bearer);\r\n\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: headers,\r\n  };\r\n\r\n  return fetch(graphConfig.graphMeEndpoint, options)\r\n    .then((response) => response.json())\r\n    .catch((error) => console.log(error));\r\n}\r\n\r\n/**\r\n * Renders information about the signed-in user or a button to retrieve data about the user\r\n */\r\nconst ProfileContent = () => {\r\n  const { instance, accounts } = useMsal();\r\n  const [graphData, setGraphData] = useState(null);\r\n\r\n  function RequestProfileData() {\r\n    // Silently acquires an access token which is then attached to a request for MS Graph data\r\n    instance\r\n      .acquireTokenSilent({\r\n        ...loginRequest,\r\n        account: accounts[0],\r\n      })\r\n      .then((response) => {\r\n        callMsGraph(response.accessToken).then((response) =>\r\n          setGraphData(response)\r\n        );\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"card-title\">Welcome {accounts[0].name}</h5>\r\n      <br />\r\n      {graphData ? (\r\n        <ProfileData graphData={graphData} />\r\n      ) : (\r\n        <button onClick={RequestProfileData}>\r\n          Request Profile Information\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileContent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,WAAW,EAAEC,YAAY,QAAQ,yBAAyB;AACnE,SAASC,OAAO,QAAQ,mBAAmB;;AAE3C;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIA,OAAO,eAAeC,WAAWA,CAACC,WAAmB,EAAE;EACrD,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC7B,MAAMC,MAAM,GAAI,UAASH,WAAY,EAAC;EAEtCC,OAAO,CAACG,MAAM,CAAC,eAAe,EAAED,MAAM,CAAC;EAEvC,MAAME,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbL,OAAO,EAAEA;EACX,CAAC;EAED,OAAOM,KAAK,CAACf,WAAW,CAACgB,eAAe,EAAEH,OAAO,CAAC,CAC/CI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AACzC;;AAEA;AACA;AACA;AACA,MAAMG,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGzB,OAAO,CAAC,CAAC;EACxC,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAEhD,SAASgC,kBAAkBA,CAAA,EAAG;IAC5B;IACAJ,QAAQ,CACLK,kBAAkB,CAAC;MAClB,GAAG9B,YAAY;MACf+B,OAAO,EAAEL,QAAQ,CAAC,CAAC;IACrB,CAAC,CAAC,CACDV,IAAI,CAAEC,QAAQ,IAAK;MAClBX,WAAW,CAACW,QAAQ,CAACV,WAAW,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAC9CW,YAAY,CAACX,QAAQ,CACvB,CAAC;IACH,CAAC,CAAC;EACN;EAEA,oBACEd,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACE7B,OAAA;MAAI8B,SAAS,EAAC,YAAY;MAAAD,QAAA,GAAC,UAAQ,EAACN,QAAQ,CAAC,CAAC,CAAC,CAACQ,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1DnC,OAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLX,SAAS,gBACRxB,OAAA,CAACL,WAAW;MAAC6B,SAAS,EAAEA;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAErCnC,OAAA;MAAQoC,OAAO,EAAEV,kBAAmB;MAAAG,QAAA,EAAC;IAErC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA,eACD,CAAC;AAEP,CAAC;AAACd,EAAA,CA/BID,cAAc;EAAA,QACatB,OAAO;AAAA;AAAAuC,EAAA,GADlCjB,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}