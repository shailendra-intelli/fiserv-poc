{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  paths: {}\n};\nconst intitialStatePathMethod = {\n  summary: \"\",\n  description: \"\",\n  parameters: [],\n  operationId: \"\",\n  responses: {\n    default: {\n      description: \"Default response\"\n    }\n  },\n  requestBody: {},\n  security: {},\n  links: {},\n  callbacks: {}\n};\nconst mainTabsSlice = createSlice({\n  name: \"main\",\n  initialState,\n  reducers: {\n    addPath: (state, action) => {\n      var _action$payload;\n      const {\n        methodName\n      } = action.payload;\n      return {\n        ...state,\n        paths: (_action$payload = action.payload) !== null && _action$payload !== void 0 ? _action$payload : {\n          get: {\n            ...intitialStatePathMethod\n          }\n        }\n      };\n    },\n    addMethod: (state, action) => {\n      const {\n        pathName,\n        methodName\n      } = action.payload;\n      return {\n        ...state,\n        paths: {\n          ...state.paths,\n          [pathName]: {\n            [methodName]: {\n              ...intitialStatePathMethod\n            }\n          }\n        }\n      };\n    }\n  }\n});\nexport const {\n  addPath\n} = mainTabsSlice.actions;\nexport const selectDetails = state => state.details.paths;\nexport { intitialStatePathMethod };\nexport default mainTabsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","paths","intitialStatePathMethod","summary","description","parameters","operationId","responses","default","requestBody","security","links","callbacks","mainTabsSlice","name","reducers","addPath","state","action","_action$payload","methodName","payload","get","addMethod","pathName","actions","selectDetails","details","reducer"],"sources":["D:/react-typescript/intelli-gui/src/store/reducers/mainTabsSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport type MainTabsState = any;\r\nconst initialState: MainTabsState = {\r\n  paths: {},\r\n};\r\n\r\nconst intitialStatePathMethod = {\r\n  summary: \"\",\r\n  description: \"\",\r\n  parameters: [],\r\n  operationId: \"\",\r\n  responses: {\r\n    default: {\r\n      description: \"Default response\",\r\n    },\r\n  },\r\n  requestBody: {},\r\n  security: {},\r\n  links: {},\r\n  callbacks: {},\r\n};\r\n\r\nconst mainTabsSlice = createSlice({\r\n  name: \"main\",\r\n  initialState,\r\n  reducers: {\r\n    addPath: (state: any, action: PayloadAction<MainTabsState>) => {\r\n      const { methodName } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        paths: action.payload ?? {\r\n          get: {\r\n            ...intitialStatePathMethod,\r\n          },\r\n        },\r\n      };\r\n    },\r\n    addMethod: (state: any, action: PayloadAction<MainTabsState>) => {\r\n      const { pathName, methodName } = action.payload;\r\n      return {\r\n        ...state,\r\n        paths: {\r\n          ...state.paths,\r\n          [pathName]: {\r\n            [methodName]: {\r\n              ...intitialStatePathMethod,\r\n            },\r\n          },\r\n        },\r\n      };\r\n    },\r\n  },\r\n});\r\nexport const { addPath } = mainTabsSlice.actions;\r\nexport const selectDetails = (state: { details: MainTabsState }) =>\r\n  state.details.paths;\r\nexport { intitialStatePathMethod };\r\nexport default mainTabsSlice.reducer;\r\n"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAG7D,MAAMC,YAA2B,GAAG;EAClCC,KAAK,EAAE,CAAC;AACV,CAAC;AAED,MAAMC,uBAAuB,GAAG;EAC9BC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,EAAE;EACfC,UAAU,EAAE,EAAE;EACdC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE;IACTC,OAAO,EAAE;MACPJ,WAAW,EAAE;IACf;EACF,CAAC;EACDK,WAAW,EAAE,CAAC,CAAC;EACfC,QAAQ,EAAE,CAAC,CAAC;EACZC,KAAK,EAAE,CAAC,CAAC;EACTC,SAAS,EAAE,CAAC;AACd,CAAC;AAED,MAAMC,aAAa,GAAGd,WAAW,CAAC;EAChCe,IAAI,EAAE,MAAM;EACZd,YAAY;EACZe,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAU,EAAEC,MAAoC,KAAK;MAAA,IAAAC,eAAA;MAC7D,MAAM;QAAEC;MAAW,CAAC,GAAGF,MAAM,CAACG,OAAO;MAErC,OAAO;QACL,GAAGJ,KAAK;QACRhB,KAAK,GAAAkB,eAAA,GAAED,MAAM,CAACG,OAAO,cAAAF,eAAA,cAAAA,eAAA,GAAI;UACvBG,GAAG,EAAE;YACH,GAAGpB;UACL;QACF;MACF,CAAC;IACH,CAAC;IACDqB,SAAS,EAAEA,CAACN,KAAU,EAAEC,MAAoC,KAAK;MAC/D,MAAM;QAAEM,QAAQ;QAAEJ;MAAW,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC/C,OAAO;QACL,GAAGJ,KAAK;QACRhB,KAAK,EAAE;UACL,GAAGgB,KAAK,CAAChB,KAAK;UACd,CAACuB,QAAQ,GAAG;YACV,CAACJ,UAAU,GAAG;cACZ,GAAGlB;YACL;UACF;QACF;MACF,CAAC;IACH;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEc;AAAQ,CAAC,GAAGH,aAAa,CAACY,OAAO;AAChD,OAAO,MAAMC,aAAa,GAAIT,KAAiC,IAC7DA,KAAK,CAACU,OAAO,CAAC1B,KAAK;AACrB,SAASC,uBAAuB;AAChC,eAAeW,aAAa,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}