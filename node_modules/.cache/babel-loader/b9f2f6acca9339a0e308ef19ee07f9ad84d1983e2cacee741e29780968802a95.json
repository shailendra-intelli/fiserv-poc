{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\main\\\\subtabs\\\\security\\\\PathSubTabSecurity.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../../store/hooks\";\nimport { updatePath } from \"../../mainTabsSlice\";\nimport { Card } from \"intelli-ui-components-library\";\nimport styles from \"./path_sub_tab_security.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PathSubTabSecurity = ({\n  pathName,\n  methodName\n}) => {\n  _s();\n  const paths = useAppSelector(state => state.main.paths);\n  // const securitySchemes = useAppSelector(\n  //   (state) => state.security.securitySchemes\n  // );\n  const securitySchemas = [];\n  console.log(paths);\n  const dispatch = useAppDispatch();\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  useEffect(() => {\n    if (Object.keys(securitySchemes).length > 0) {\n      setSelectedValue(\"custom\");\n    }\n  }, [securitySchemes]);\n  useEffect(() => {\n    let updatedSecurityData = [];\n    if (selectedValue === \"default\") {\n      updatedSecurityData = [];\n    } else if (selectedValue === \"disabled\") {\n      updatedSecurityData = [];\n    } else if (selectedValue === \"custom\") {\n      updatedSecurityData = Object.keys(securitySchemes).map(key => ({\n        [key]: \"\"\n      }));\n    } else {\n      updatedSecurityData = [];\n    }\n    dispatch(updatePath({\n      pathName,\n      methodName,\n      methodKey: \"security\",\n      data: [...paths[pathName][methodName].security, ...updatedSecurityData]\n    }));\n  }, [selectedValue]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles[\"security-subtab\"]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(PathSubTabSecurity, \"qGsU7DGIoShsacYyTxket+oAmkw=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = PathSubTabSecurity;\nexport default PathSubTabSecurity;\nvar _c;\n$RefreshReg$(_c, \"PathSubTabSecurity\");","map":{"version":3,"names":["React","useEffect","useState","useAppDispatch","useAppSelector","updatePath","Card","styles","jsxDEV","_jsxDEV","PathSubTabSecurity","pathName","methodName","_s","paths","state","main","securitySchemas","console","log","dispatch","selectedValue","setSelectedValue","Object","keys","securitySchemes","length","updatedSecurityData","map","key","methodKey","data","security","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/main/subtabs/security/PathSubTabSecurity.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../store/hooks\";\r\nimport { updatePath } from \"../../mainTabsSlice\";\r\nimport { Card, Radio } from \"intelli-ui-components-library\";\r\n\r\nimport styles from \"./path_sub_tab_security.module.scss\";\r\n\r\nconst PathSubTabSecurity = ({ pathName, methodName }: any) => {\r\n  const paths = useAppSelector((state) => state.main.paths);\r\n  // const securitySchemes = useAppSelector(\r\n  //   (state) => state.security.securitySchemes\r\n  // );\r\n  const securitySchemas = [];\r\n\r\n  console.log(paths);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(securitySchemes).length > 0) {\r\n      setSelectedValue(\"custom\");\r\n    }\r\n  }, [securitySchemes]);\r\n\r\n  useEffect(() => {\r\n    let updatedSecurityData: any[] = [];\r\n    if (selectedValue === \"default\") {\r\n      updatedSecurityData = [];\r\n    } else if (selectedValue === \"disabled\") {\r\n      updatedSecurityData = [];\r\n    } else if (selectedValue === \"custom\") {\r\n      updatedSecurityData = Object.keys(securitySchemes).map((key) => ({\r\n        [key]: \"\",\r\n      }));\r\n    } else {\r\n      updatedSecurityData = [];\r\n    }\r\n    dispatch(\r\n      updatePath({\r\n        pathName,\r\n        methodName,\r\n        methodKey: \"security\",\r\n        data: [...paths[pathName][methodName].security, ...updatedSecurityData],\r\n      })\r\n    );\r\n  }, [selectedValue]);\r\n\r\n  return (\r\n    <Card className={styles[\"security-subtab\"]}>\r\n      {/* <div className={styles[\"security-subtab__radio\"]}>\r\n        <div onClick={() => setSelectedValue(\"default\")}>\r\n          <Radio\r\n            label={\"Use default security\"}\r\n            checked={selectedValue === \"default\"}\r\n          />\r\n        </div>\r\n        <div onClick={() => setSelectedValue(\"disabled\")}>\r\n          <Radio\r\n            label={\"Disable security\"}\r\n            checked={selectedValue === \"disabled\"}\r\n          />\r\n        </div>\r\n        <div onClick={() => setSelectedValue(\"custom\")}>\r\n          <Radio\r\n            label={\"Use custom security\"}\r\n            checked={selectedValue === \"custom\"}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {selectedValue === \"custom\" &&\r\n      paths[pathName][methodName].security.length > 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          <p>Selected Security Schemes</p>\r\n          {paths[pathName][methodName].security.map((obj: any) => {\r\n            let k = Object.keys(obj)[0];\r\n            let v = obj[k];\r\n            return <span key={k}>{`${k}`}</span>;\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )} */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PathSubTabSecurity;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,cAAc,QAAQ,yBAAyB;AACxE,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,IAAI,QAAe,+BAA+B;AAE3D,OAAOC,MAAM,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAMC,KAAK,GAAGV,cAAc,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EACzD;EACA;EACA;EACA,MAAMG,eAAe,GAAG,EAAE;EAE1BC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAClB,MAAMM,QAAQ,GAAGjB,cAAc,CAAC,CAAC;EAEjC,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,IAAIsB,MAAM,CAACC,IAAI,CAACC,eAAe,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3CJ,gBAAgB,CAAC,QAAQ,CAAC;IAC5B;EACF,CAAC,EAAE,CAACG,eAAe,CAAC,CAAC;EAErBxB,SAAS,CAAC,MAAM;IACd,IAAI0B,mBAA0B,GAAG,EAAE;IACnC,IAAIN,aAAa,KAAK,SAAS,EAAE;MAC/BM,mBAAmB,GAAG,EAAE;IAC1B,CAAC,MAAM,IAAIN,aAAa,KAAK,UAAU,EAAE;MACvCM,mBAAmB,GAAG,EAAE;IAC1B,CAAC,MAAM,IAAIN,aAAa,KAAK,QAAQ,EAAE;MACrCM,mBAAmB,GAAGJ,MAAM,CAACC,IAAI,CAACC,eAAe,CAAC,CAACG,GAAG,CAAEC,GAAG,KAAM;QAC/D,CAACA,GAAG,GAAG;MACT,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACLF,mBAAmB,GAAG,EAAE;IAC1B;IACAP,QAAQ,CACNf,UAAU,CAAC;MACTM,QAAQ;MACRC,UAAU;MACVkB,SAAS,EAAE,UAAU;MACrBC,IAAI,EAAE,CAAC,GAAGjB,KAAK,CAACH,QAAQ,CAAC,CAACC,UAAU,CAAC,CAACoB,QAAQ,EAAE,GAAGL,mBAAmB;IACxE,CAAC,CACH,CAAC;EACH,CAAC,EAAE,CAACN,aAAa,CAAC,CAAC;EAEnB,oBACEZ,OAAA,CAACH,IAAI;IAAC2B,SAAS,EAAE1B,MAAM,CAAC,iBAAiB;EAAE;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAyCrC,CAAC;AAEX,CAAC;AAACxB,EAAA,CArFIH,kBAAkB;EAAA,QACRN,cAAc,EAOXD,cAAc;AAAA;AAAAmC,EAAA,GAR3B5B,kBAAkB;AAuFxB,eAAeA,kBAAkB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}