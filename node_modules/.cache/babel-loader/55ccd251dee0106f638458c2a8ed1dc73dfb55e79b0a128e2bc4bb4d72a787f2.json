{"ast":null,"code":"/*! @azure/msal-common v14.4.0 2023-11-07 */\n'use strict';\n\nimport { Constants } from '../utils/Constants.mjs';\nimport { unexpectedError, postRequestFailed } from './AuthErrorCodes.mjs';\nimport * as AuthErrorCodes from './AuthErrorCodes.mjs';\nexport { AuthErrorCodes };\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst AuthErrorMessages = {\n  [unexpectedError]: \"Unexpected error in authentication.\",\n  [postRequestFailed]: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\"\n};\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use AuthErrorCodes instead\n */\nconst AuthErrorMessage = {\n  unexpectedError: {\n    code: unexpectedError,\n    desc: AuthErrorMessages[unexpectedError]\n  },\n  postRequestFailed: {\n    code: postRequestFailed,\n    desc: AuthErrorMessages[postRequestFailed]\n  }\n};\n/**\n * General error class thrown by the MSAL.js library.\n */\nclass AuthError extends Error {\n  constructor(errorCode, errorMessage, suberror) {\n    const errorString = errorMessage ? `${errorCode}: ${errorMessage}` : errorCode;\n    super(errorString);\n    Object.setPrototypeOf(this, AuthError.prototype);\n    this.errorCode = errorCode || Constants.EMPTY_STRING;\n    this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n    this.subError = suberror || Constants.EMPTY_STRING;\n    this.name = \"AuthError\";\n  }\n  setCorrelationId(correlationId) {\n    this.correlationId = correlationId;\n  }\n}\nfunction createAuthError(code, additionalMessage) {\n  return new AuthError(code, additionalMessage ? `${AuthErrorMessages[code]} ${additionalMessage}` : AuthErrorMessages[code]);\n}\nexport { AuthError, AuthErrorMessage, AuthErrorMessages, createAuthError };","map":{"version":3,"names":["postRequestFailed","desc","AuthErrorMessages","AuthError","Error","errorString","errorMessage","errorCode","Object","setPrototypeOf","prototype","Constants","EMPTY_STRING","name","setCorrelationId","correlationId"],"sources":["D:\\react-typescript\\intelli-gui\\node_modules\\@azure\\msal-common\\src\\error\\AuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\nimport * as AuthErrorCodes from \"./AuthErrorCodes\";\nexport { AuthErrorCodes };\n\nexport const AuthErrorMessages = {\n    [AuthErrorCodes.unexpectedError]: \"Unexpected error in authentication.\",\n    [AuthErrorCodes.postRequestFailed]:\n        \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n};\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use AuthErrorCodes instead\n */\nexport const AuthErrorMessage = {\n    unexpectedError: {\n        code: AuthErrorCodes.unexpectedError,\n        desc: AuthErrorMessages[AuthErrorCodes.unexpectedError],\n    },\n    postRequestFailed: {\n        code: AuthErrorCodes.postRequestFailed,\n        desc: AuthErrorMessages[AuthErrorCodes.postRequestFailed],\n    },\n};\n\n/**\n * General error class thrown by the MSAL.js library.\n */\nexport class AuthError extends Error {\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    /**\n     * Describes the subclass of an error\n     */\n    subError: string;\n\n    /**\n     * CorrelationId associated with the error\n     */\n    correlationId: string;\n\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n\n    setCorrelationId(correlationId: string): void {\n        this.correlationId = correlationId;\n    }\n}\n\nexport function createAuthError(\n    code: string,\n    additionalMessage?: string\n): AuthError {\n    return new AuthError(\n        code,\n        additionalMessage\n            ? `${AuthErrorMessages[code]} ${additionalMessage}`\n            : AuthErrorMessages[code]\n    );\n}\n"],"mappings":";;;;;;;;AAMA;AACA;AAEA;;;;EASG,CAAAA,iBAAA;AACH;;;;;;;;;GASE;EAEFA,iBAAA;;IAEGC,IAAA,EAAAC,iBAAA,CAAAF,iBAAA;EACH;AACI;;AAEG;;AAGH,MAAAG,SAAA,SAAAC,KAAA;;IAEG,MAAAC,WAAA,GAAAC,YAAA,GACS,GAAAC,SAAS,KAAAD,YAAA,KAErBC,SAAA;;IAEGC,MAAA,CAAAC,cAAA,OAAAN,SAAA,CAAAO,SAAA;IACK,KAAAH,SAAS,GAAAA,SAAA,IAAAI,SAAA,CAAAC,YAAA;IAEjB,KAAAN,YAAA,GAAAA,YAAA,IAAAK,SAAA,CAAAC,YAAA;;IAEG,KAAAC,IAAA;;EAGSC,iBAAAC,aAAkB,EAAE;IAahC,KAAAA,aAAiB,GAAAA,aAAqB;EAGzC;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}