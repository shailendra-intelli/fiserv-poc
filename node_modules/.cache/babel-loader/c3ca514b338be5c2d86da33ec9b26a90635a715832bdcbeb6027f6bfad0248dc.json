{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport { AuthError } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst BrowserConfigurationAuthErrorMessage = {\n  redirectUriNotSet: {\n    code: \"redirect_uri_empty\",\n    desc: \"A redirect URI is required for all calls, and none has been set.\"\n  },\n  postLogoutUriNotSet: {\n    code: \"post_logout_uri_empty\",\n    desc: \"A post logout redirect has not been set.\"\n  },\n  storageNotSupportedError: {\n    code: \"storage_not_supported\",\n    desc: \"Given storage configuration option was not supported.\"\n  },\n  noRedirectCallbacksSet: {\n    code: \"no_redirect_callbacks\",\n    desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  invalidCallbackObject: {\n    code: \"invalid_callback_object\",\n    desc: \"The object passed for the callback was invalid. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  stubPcaInstanceCalled: {\n    code: \"stubbed_public_client_application_called\",\n    desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\n  },\n  inMemRedirectUnavailable: {\n    code: \"in_mem_redirect_unavailable\",\n    desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n  },\n  entropyNotProvided: {\n    code: \"entropy_not_provided\",\n    desc: \"The available browser crypto interface requires entropy set via system.cryptoOptions.entropy configuration option.\"\n  }\n};\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nclass BrowserConfigurationAuthError extends AuthError {\n  constructor(errorCode, errorMessage) {\n    super(errorCode, errorMessage);\n    this.name = \"BrowserConfigurationAuthError\";\n    Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n  }\n  /**\n   * Creates an error thrown when the redirect uri is empty (not set by caller)\n   */\n  static createRedirectUriEmptyError() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code, BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n  }\n  /**\n   * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n   */\n  static createPostLogoutRedirectUriEmptyError() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code, BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n  }\n  /**\n   * Creates error thrown when given storage location is not supported.\n   * @param givenStorageLocation\n   */\n  static createStorageNotSupportedError(givenStorageLocation) {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\n  }\n  /**\n   * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\n   */\n  static createRedirectCallbacksNotSetError() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n  }\n  /**\n   * Creates error thrown when the stub instance of PublicClientApplication is called.\n   */\n  static createStubPcaInstanceCalledError() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code, BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n  }\n  /*\n   * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\n   */\n  static createInMemoryRedirectUnavailableError() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n  }\n  /**\n   * Creates an error thrown when a crypto interface that requires entropy is initialized without entropy\n   */\n  static createEntropyNotProvided() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.entropyNotProvided.code, BrowserConfigurationAuthErrorMessage.entropyNotProvided.desc);\n  }\n}\nexport { BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage };","map":{"version":3,"names":["desc","code","BrowserConfigurationAuthError","AuthError","errorCode","errorMessage","name","Object","setPrototypeOf","prototype","createRedirectUriEmptyError","createPostLogoutRedirectUriEmptyError","BrowserConfigurationAuthErrorMessage","postLogoutUriNotSet","createStorageNotSupportedError","givenStorageLocation"],"sources":["D:\\react-typescript\\intelli-gui\\node_modules\\@azure\\msal-browser\\src\\error\\BrowserConfigurationAuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\",\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\",\n    },\n    storageNotSupportedError: {\n        code: \"storage_not_supported\",\n        desc: \"Given storage configuration option was not supported.\",\n    },\n    noRedirectCallbacksSet: {\n        code: \"no_redirect_callbacks\",\n        desc:\n            \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\",\n    },\n    invalidCallbackObject: {\n        code: \"invalid_callback_object\",\n        desc:\n            \"The object passed for the callback was invalid. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\",\n    },\n    stubPcaInstanceCalled: {\n        code: \"stubbed_public_client_application_called\",\n        desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n    },\n    inMemRedirectUnavailable: {\n        code: \"in_mem_redirect_unavailable\",\n        desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\n    },\n    entropyNotProvided: {\n        code: \"entropy_not_provided\",\n        desc: \"The available browser crypto interface requires entropy set via system.cryptoOptions.entropy configuration option.\",\n    },\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc\n        );\n    }\n\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc\n        );\n    }\n\n    /**\n     * Creates error thrown when given storage location is not supported.\n     * @param givenStorageLocation\n     */\n    static createStorageNotSupportedError(\n        givenStorageLocation: string\n    ): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code,\n            `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`\n        );\n    }\n\n    /**\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\n     */\n    static createRedirectCallbacksNotSetError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code,\n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc\n        );\n    }\n\n    /**\n     * Creates error thrown when the stub instance of PublicClientApplication is called.\n     */\n    static createStubPcaInstanceCalledError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code,\n            BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc\n        );\n    }\n\n    /*\n     * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\n     */\n    static createInMemoryRedirectUnavailableError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code,\n            BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc\n        );\n    }\n\n    /**\n     * Creates an error thrown when a crypto interface that requires entropy is initialized without entropy\n     */\n    static createEntropyNotProvided(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorMessage.entropyNotProvided.code,\n            BrowserConfigurationAuthErrorMessage.entropyNotProvided.desc\n        );\n    }\n}\n"],"mappings":";;;;;AAKA;AAEA;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsCDA,IAAA;EAEF;;IAEGC,IAAA;IACUD,IAAA;EACG;AAOZ;;AAEG;;AAQH,MAAAE,6BAAA,SAAAC,SAAA;;IAEG,MAAAC,SAAA,EAAAC,YAAA;IACG,IAAsC,CAAAC,IAAA;IAO5CC,MAAA,CAAAC,cAAA,OAAAN,6BAAA,CAAAO,SAAA;;;AAGG;AACH;EASA,OAAAC,4BAAA;;EAEG;;AAQH;;EAEG,OAAAC,sCAAA;IACG,OAAiC,IAAAT,6BAAiC,CAAAU,oCAAA,CAAAC,mBAAA,CAAAZ,IAAA,EAAAW,oCAAA,CAAAC,mBAAA,CAAAb,IAAA;;EAiBxE;;AAEG;;EAON,OAAAc,+BAAAC,oBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}