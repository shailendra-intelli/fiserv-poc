{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\api-validator\\\\GeneratePostmanCollection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { toastFile } from \"../../store/reducers/showToastSlice\";\nimport styles from \"./apiValidator.module.scss\";\nimport { Button, FileUpload } from \"intelli-ui-components-library\";\nimport { SaveIcon } from \"../../assets/icons\";\nimport { LoadingOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport Modals from \"../modals/Modals\";\nimport { uploadFile } from \"../../store/reducers/uploadSlice\";\nimport { exportData } from \"../../store/reducers/exportSlice\";\nimport { updateApiValidatorState } from \"../../store/reducers/apiValidatorSlice\";\nimport SelectFile from \"../../assets/svgs/select_file.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:8080\";\nconst GeneratePostmanCollection = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const uploadData = useAppSelector(state => state.upload);\n  const apiValidator = useAppSelector(state => state.apiValidator);\n  const {\n    isCreatingCollection,\n    createdCollectionData,\n    hasDownloadedCollection\n  } = apiValidator;\n  const [input, setInput] = useState(uploadData);\n  const [invalid, setInvalid] = useState(true);\n  const [modalData, setModalData] = useState({\n    title: \"\",\n    description: \"\",\n    onConfirm: () => {},\n    showModal: false\n  });\n  const closeModal = () => {\n    setModalData({\n      title: \"\",\n      description: \"\",\n      onConfirm: () => {},\n      showModal: false\n    });\n  };\n  useEffect(() => {\n    try {\n      JSON.parse(input);\n      setInvalid(false);\n      dispatch(toastFile({\n        message: \"JSON Successfully Validated!\",\n        bgColor: \"info\",\n        isVisible: true\n      }));\n    } catch (e) {\n      setInvalid(true);\n      dispatch(toastFile({\n        message: \"Please Upload/Paste Valid JSON File\",\n        bgColor: \"error\",\n        isVisible: true\n      }));\n    }\n  }, [input]);\n  useEffect(() => {\n    setInput(JSON.stringify(uploadData, null, 2));\n  }, [uploadData]);\n  const generatePostmanCollection = async () => {\n    const formData = new FormData();\n    const blob = new Blob([JSON.stringify(uploadData, null, 2)], {\n      type: \"application/json\"\n    });\n    const file = new File([blob], \"data.json\", {\n      type: \"application/json\"\n    });\n    formData.append(\"apiSpec\", file);\n    dispatch(updateApiValidatorState({\n      isCreatingCollection: true\n    }));\n    try {\n      let response = await fetch(`${BASE_URL}/createPostmanCollection`, {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(data, null, 2));\n      dispatch(updateApiValidatorState({\n        createdCollectionData: dataStr\n      }));\n      dispatch(updateApiValidatorState({\n        hasCreatedCollection: true\n      }));\n      dispatch(toastFile({\n        message: \"Collection generated successfully! Please download.\",\n        bgColor: \"info\",\n        isVisible: true\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n    dispatch(updateApiValidatorState({\n      isCreatingCollection: false\n    }));\n    dispatch(updateApiValidatorState({\n      hasDownloadedCollection: false\n    }));\n  };\n  const downloadCollectionData = () => {\n    if (!createdCollectionData) {\n      dispatch(toastFile({\n        message: \"Please generate a postman collection.\",\n        bgColor: \"warning\",\n        isVisible: true\n      }));\n      return;\n    }\n    const downloadAnchorNode = document.createElement(\"a\");\n    downloadAnchorNode.setAttribute(\"href\", createdCollectionData);\n    downloadAnchorNode.setAttribute(\"download\", \"collection.json\");\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n    dispatch(toastFile({\n      message: \"Collection downloaded successfully!\",\n      bgColor: \"info\",\n      isVisible: true\n    }));\n    dispatch(updateApiValidatorState({\n      hasDownloadedCollection: true\n    }));\n  };\n  const handleFileSelect = file => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const jsonData = JSON.parse(e.target.result);\n          dispatch(uploadFile({\n            ...jsonData\n          }));\n          dispatch(exportData({\n            ...jsonData\n          }));\n        } catch {\n          console.log(\"Something Wents Worng while reading the file\");\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n  const handleUploadJsonFile = file => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          console.log(\"JSON data\", e.target.result);\n          const jsonData = JSON.parse(e.target.result);\n          //dispatch(uploadFile({ ...jsonData }));\n          //dispatch(exportData({ ...jsonData }));\n        } catch {\n          console.log(\"Something Went Wrong while reading the json file\");\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n  const handleUploadCsvFile1 = file => {\n    if (file) {\n      const reader1 = new FileReader();\n      reader1.onload = e => {\n        try {\n          const jsonData = JSON.parse(e.target.result);\n          console.log(\"csv data\", JSON.parse(e.target.result));\n          //dispatch(uploadFile({ ...jsonData }));\n          //dispatch(exportData({ ...jsonData }));\n        } catch {\n          console.log(\"Something Went Wrong while reading the csv file\");\n        }\n      };\n      reader1.readAsText(file);\n    }\n  };\n  const handleUploadCsvFile = event => {\n    console.log(\"CSV\", event.target.files);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.uploadFiles,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginLeft: \"16px\",\n            marginTop: \"20px\"\n          },\n          children: \"Upload API Spec file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginLeft: \"16px\",\n            marginTop: \"20px\"\n          },\n          children: \"Upload API Data file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.uploadFiles,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.selectFile,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: SelectFile,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Select a file or drag and drop here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Accepted file type: .json only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n            fileInputClass: styles.fileUpload,\n            onFileSelect: handleUploadJsonFile,\n            fileType: \".json\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.selectFile,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: SelectFile,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Select a file or drag and drop here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Accepted file type: .csv only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"csvFile\",\n            class: \"btn\",\n            children: \"Select Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"csvFile\",\n            type: \"file\",\n            className: styles.fileUpload,\n            accept: \".csv\",\n            onChange: handleUploadCsvFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles[\"button-group\"]}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          round: \"round\",\n          className: styles[\"button1\"],\n          onClick: generatePostmanCollection,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles[\"button-icon\"],\n            children: isCreatingCollection ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(SettingOutlined, {\n              width: \"16px\",\n              height: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), isCreatingCollection ? `Generating....` : \"Generate\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          round: \"round\",\n          color: \"success\",\n          className: hasDownloadedCollection === false ? `${styles[\"button1\"]} ${styles[\"bg-green\"]}` : styles[\"button1\"],\n          disabled: invalid,\n          onClick: downloadCollectionData,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles[\"button-icon\"],\n            children: /*#__PURE__*/_jsxDEV(SaveIcon, {\n              fill: \"#FFFFFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), hasDownloadedCollection === false ? `Download` : `Download`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), modalData.showModal && /*#__PURE__*/_jsxDEV(Modals, {\n        showModal: modalData.showModal,\n        header: modalData.title,\n        description: modalData.description,\n        onConfirm: modalData.onConfirm,\n        onCancel: closeModal,\n        childClassName: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneratePostmanCollection, \"Uagttl+5Ueatj1sykiZTEj3yyNU=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n_c = GeneratePostmanCollection;\nexport default GeneratePostmanCollection;\nvar _c;\n$RefreshReg$(_c, \"GeneratePostmanCollection\");","map":{"version":3,"names":["React","useEffect","useState","useAppDispatch","useAppSelector","toastFile","styles","Button","FileUpload","SaveIcon","LoadingOutlined","SettingOutlined","Modals","uploadFile","exportData","updateApiValidatorState","SelectFile","jsxDEV","_jsxDEV","BASE_URL","GeneratePostmanCollection","_s","dispatch","uploadData","state","upload","apiValidator","isCreatingCollection","createdCollectionData","hasDownloadedCollection","input","setInput","invalid","setInvalid","modalData","setModalData","title","description","onConfirm","showModal","closeModal","JSON","parse","message","bgColor","isVisible","e","stringify","generatePostmanCollection","formData","FormData","blob","Blob","type","file","File","append","response","fetch","method","body","data","json","dataStr","encodeURIComponent","hasCreatedCollection","error","console","log","downloadCollectionData","downloadAnchorNode","document","createElement","setAttribute","appendChild","click","remove","handleFileSelect","reader","FileReader","onload","jsonData","target","result","readAsText","handleUploadJsonFile","handleUploadCsvFile1","reader1","handleUploadCsvFile","event","files","className","container","children","uploadFiles","style","marginLeft","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","selectFile","src","alt","fileInputClass","fileUpload","onFileSelect","fileType","htmlFor","class","id","accept","onChange","round","onClick","width","height","color","disabled","fill","header","onCancel","childClassName","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/api-validator/GeneratePostmanCollection.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport { toastFile } from \"../../store/reducers/showToastSlice\";\r\nimport styles from \"./apiValidator.module.scss\";\r\nimport { Button, FileUpload } from \"intelli-ui-components-library\";\r\nimport { DeleteIcon, PawIcon, SaveIcon, UploadIcon } from \"../../assets/icons\";\r\nimport { LoadingOutlined, SettingOutlined } from \"@ant-design/icons\";\r\nimport Modals from \"../modals/Modals\";\r\nimport { uploadFile } from \"../../store/reducers/uploadSlice\";\r\nimport { exportData } from \"../../store/reducers/exportSlice\";\r\nimport { updateApiValidatorState } from \"../../store/reducers/apiValidatorSlice\";\r\nimport SelectFile from \"../../assets/svgs/select_file.svg\";\r\nimport { style } from \"@mui/system\";\r\n\r\nconst BASE_URL = \"http://localhost:8080\";\r\n\r\nconst GeneratePostmanCollection = () => {\r\n  const dispatch = useAppDispatch();\r\n  const uploadData = useAppSelector((state) => state.upload);\r\n  const apiValidator = useAppSelector((state) => state.apiValidator);\r\n\r\n  const {\r\n    isCreatingCollection,\r\n    createdCollectionData,\r\n    hasDownloadedCollection,\r\n  } = apiValidator;\r\n\r\n  const [input, setInput] = useState<any>(uploadData);\r\n  const [invalid, setInvalid] = useState(true);\r\n\r\n  const [modalData, setModalData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    onConfirm: () => {},\r\n    showModal: false,\r\n  });\r\n\r\n  const closeModal = () => {\r\n    setModalData({\r\n      title: \"\",\r\n      description: \"\",\r\n      onConfirm: () => {},\r\n      showModal: false,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      JSON.parse(input);\r\n      setInvalid(false);\r\n      dispatch(\r\n        toastFile({\r\n          message: \"JSON Successfully Validated!\",\r\n          bgColor: \"info\",\r\n          isVisible: true,\r\n        })\r\n      );\r\n    } catch (e) {\r\n      setInvalid(true);\r\n      dispatch(\r\n        toastFile({\r\n          message: \"Please Upload/Paste Valid JSON File\",\r\n          bgColor: \"error\",\r\n          isVisible: true,\r\n        })\r\n      );\r\n    }\r\n  }, [input]);\r\n\r\n  useEffect(() => {\r\n    setInput(JSON.stringify(uploadData, null, 2));\r\n  }, [uploadData]);\r\n\r\n  const generatePostmanCollection = async () => {\r\n    const formData = new FormData();\r\n    const blob = new Blob([JSON.stringify(uploadData, null, 2)], {\r\n      type: \"application/json\",\r\n    });\r\n    const file = new File([blob], \"data.json\", { type: \"application/json\" });\r\n    formData.append(\"apiSpec\", file);\r\n\r\n    dispatch(updateApiValidatorState({ isCreatingCollection: true }));\r\n    try {\r\n      let response = await fetch(`${BASE_URL}/createPostmanCollection`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await response.json();\r\n\r\n      const dataStr =\r\n        \"data:text/json;charset=utf-8,\" +\r\n        encodeURIComponent(JSON.stringify(data, null, 2));\r\n\r\n      dispatch(updateApiValidatorState({ createdCollectionData: dataStr }));\r\n      dispatch(updateApiValidatorState({ hasCreatedCollection: true }));\r\n      dispatch(\r\n        toastFile({\r\n          message: \"Collection generated successfully! Please download.\",\r\n          bgColor: \"info\",\r\n          isVisible: true,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    dispatch(updateApiValidatorState({ isCreatingCollection: false }));\r\n    dispatch(updateApiValidatorState({ hasDownloadedCollection: false }));\r\n  };\r\n\r\n  const downloadCollectionData = () => {\r\n    if (!createdCollectionData) {\r\n      dispatch(\r\n        toastFile({\r\n          message: \"Please generate a postman collection.\",\r\n          bgColor: \"warning\",\r\n          isVisible: true,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n    const downloadAnchorNode = document.createElement(\"a\");\r\n    downloadAnchorNode.setAttribute(\"href\", createdCollectionData);\r\n    downloadAnchorNode.setAttribute(\"download\", \"collection.json\");\r\n    document.body.appendChild(downloadAnchorNode);\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n    dispatch(\r\n      toastFile({\r\n        message: \"Collection downloaded successfully!\",\r\n        bgColor: \"info\",\r\n        isVisible: true,\r\n      })\r\n    );\r\n    dispatch(updateApiValidatorState({ hasDownloadedCollection: true }));\r\n  };\r\n\r\n  const handleFileSelect = (file: File) => {\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          const jsonData = JSON.parse(e.target.result);\r\n          dispatch(uploadFile({ ...jsonData }));\r\n          dispatch(exportData({ ...jsonData }));\r\n        } catch {\r\n          console.log(\"Something Wents Worng while reading the file\");\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  const handleUploadJsonFile = (file: File) => {\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          console.log(\"JSON data\", e.target.result);\r\n          const jsonData = JSON.parse(e.target.result);\r\n          //dispatch(uploadFile({ ...jsonData }));\r\n          //dispatch(exportData({ ...jsonData }));\r\n        } catch {\r\n          console.log(\"Something Went Wrong while reading the json file\");\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  const handleUploadCsvFile1 = (file: File) => {\r\n    if (file) {\r\n      const reader1 = new FileReader();\r\n      reader1.onload = (e) => {\r\n        try {\r\n          const jsonData = JSON.parse(e.target.result);\r\n          console.log(\"csv data\", JSON.parse(e.target.result));\r\n          //dispatch(uploadFile({ ...jsonData }));\r\n          //dispatch(exportData({ ...jsonData }));\r\n        } catch {\r\n          console.log(\"Something Went Wrong while reading the csv file\");\r\n        }\r\n      };\r\n      reader1.readAsText(file);\r\n    }\r\n  };\r\n\r\n  const handleUploadCsvFile = (event: any) => {\r\n    console.log(\"CSV\", event.target.files);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div>\r\n        <div className={styles.uploadFiles}>\r\n          <h4 style={{ marginLeft: \"16px\", marginTop: \"20px\" }}>\r\n            Upload API Spec file\r\n          </h4>\r\n          <h4 style={{ marginLeft: \"16px\", marginTop: \"20px\" }}>\r\n            Upload API Data file\r\n          </h4>\r\n        </div>\r\n        <div className={styles.uploadFiles}>\r\n          <div className={styles.selectFile}>\r\n            <img src={SelectFile} alt=\"\" />\r\n            <h4>Select a file or drag and drop here</h4>\r\n            <p>Accepted file type: .json only</p>\r\n            <FileUpload\r\n              fileInputClass={styles.fileUpload}\r\n              onFileSelect={handleUploadJsonFile}\r\n              fileType=\".json\"\r\n            />\r\n          </div>\r\n          <div className={styles.selectFile}>\r\n            <img src={SelectFile} alt=\"\" />\r\n            <h4>Select a file or drag and drop here</h4>\r\n            <p>Accepted file type: .csv only</p>\r\n            <label htmlFor=\"csvFile\" class=\"btn\">\r\n              Select Image\r\n            </label>\r\n            <input\r\n              id=\"csvFile\"\r\n              type=\"file\"\r\n              className={styles.fileUpload}\r\n              accept=\".csv\"\r\n              onChange={handleUploadCsvFile}\r\n            />\r\n\r\n            {/* <FileUpload\r\n              fileInputClass={styles.fileUpload}\r\n              onFileSelect={handleUploadCsvFile}\r\n              fileType=\".csv\"\r\n            /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`${styles[\"button-group\"]}`}>\r\n        <div>\r\n          <Button\r\n            round=\"round\"\r\n            className={styles[\"button1\"]}\r\n            onClick={generatePostmanCollection}\r\n          >\r\n            <span className={styles[\"button-icon\"]}>\r\n              {isCreatingCollection ? (\r\n                <LoadingOutlined />\r\n              ) : (\r\n                <SettingOutlined width=\"16px\" height=\"16px\" />\r\n              )}\r\n            </span>\r\n            {isCreatingCollection ? `Generating....` : \"Generate\"}\r\n          </Button>\r\n          <Button\r\n            round=\"round\"\r\n            color=\"success\"\r\n            className={\r\n              hasDownloadedCollection === false\r\n                ? `${styles[\"button1\"]} ${styles[\"bg-green\"]}`\r\n                : styles[\"button1\"]\r\n            }\r\n            disabled={invalid}\r\n            onClick={downloadCollectionData}\r\n          >\r\n            <span className={styles[\"button-icon\"]}>\r\n              <SaveIcon fill=\"#FFFFFF\" />\r\n            </span>\r\n            {hasDownloadedCollection === false ? `Download` : `Download`}\r\n          </Button>\r\n        </div>\r\n\r\n        {modalData.showModal && (\r\n          <Modals\r\n            showModal={modalData.showModal}\r\n            header={modalData.title}\r\n            description={modalData.description}\r\n            onConfirm={modalData.onConfirm}\r\n            onCancel={closeModal}\r\n            childClassName=\"\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneratePostmanCollection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}