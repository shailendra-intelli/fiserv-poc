{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\schemas\\\\Schemas.tsx\",\n  _s = $RefreshSig$();\nimport SchemasList from \"./SchemasList\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useEffect } from \"react\";\nimport { schemasData } from \"../../store/reducers/schemasSlice\";\nimport styles from \"./schemas.module.scss\";\nimport { AddIcon, SaveIcon } from \"../../assets/icons\";\nimport { Button } from \"intelli-ui-components-library\";\nimport { exportData } from \"../../store/reducers/exportSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Schemas = () => {\n  _s();\n  const uploadData = useAppSelector(state => state.export);\n  const newUploadData = {\n    ...uploadData\n  };\n  const dispatch = useAppDispatch();\n  const componentValue = {\n    ...uploadData.components\n  };\n  const schemasValue = {\n    ...componentValue.schemas\n  };\n  const schemasObj = useAppSelector(state => state.schema.schemas);\n  const lengthObj = Object.keys(schemasObj).length;\n  const saveData = () => {\n    componentValue[\"schemas\"] = schemasObj;\n    newUploadData[\"components\"] = componentValue;\n    dispatch(exportData({\n      ...newUploadData\n    }));\n  };\n  const addSchema = () => {\n    const newObj = {\n      \"NewSchema\": {\n        \"type\": \"object\"\n      }\n    };\n    const addObjs = {\n      ...schemasObj,\n      ...newObj\n    };\n    dispatch(schemasData({\n      ...addObjs\n    }));\n  };\n  useEffect(() => {\n    const noData = {};\n    schemasValue ? dispatch(schemasData({\n      ...schemasValue\n    })) : dispatch(schemasData({\n      ...noData\n    }));\n  }, [uploadData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"schema-addicon\"],\n      onClick: addSchema,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"add-icon\"],\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          fill: \"#FFFFFF\",\n          width: \"16px\",\n          height: \"16px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 111\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 71\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"schemas-container\"],\n      children: schemasObj && Object.keys(schemasObj).map((schemaKey, index) => {\n        return /*#__PURE__*/_jsxDEV(SchemasList, {\n          schemaKey: schemaKey,\n          index: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"schema-icon\"],\n      children: lengthObj > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        className: styles[\"button\"],\n        onClick: saveData,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles[\"button-icon\"],\n          children: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 88\n        }, this), \"Save\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Schemas, \"hQf2vTgzC25gLn/fFzOQRgArkrg=\", false, function () {\n  return [useAppSelector, useAppDispatch, useAppSelector];\n});\n_c = Schemas;\nexport default Schemas;\nvar _c;\n$RefreshReg$(_c, \"Schemas\");","map":{"version":3,"names":["SchemasList","useAppSelector","useAppDispatch","useEffect","schemasData","styles","AddIcon","SaveIcon","Button","exportData","jsxDEV","_jsxDEV","Fragment","_Fragment","Schemas","_s","uploadData","state","export","newUploadData","dispatch","componentValue","components","schemasValue","schemas","schemasObj","schema","lengthObj","Object","keys","length","saveData","addSchema","newObj","addObjs","noData","children","className","onClick","fill","width","height","fileName","_jsxFileName","lineNumber","columnNumber","map","schemaKey","index","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/schemas/Schemas.tsx"],"sourcesContent":["import SchemasList from \"./SchemasList\";\r\nimport { useAppSelector,useAppDispatch } from \"../../store/hooks\";\r\nimport { useEffect } from \"react\";\r\nimport { schemasData } from \"../../store/reducers/schemasSlice\";\r\nimport styles from \"./schemas.module.scss\";\r\nimport { AddIcon, SaveIcon } from \"../../assets/icons\";\r\nimport { Button } from \"intelli-ui-components-library\";\r\nimport { exportData } from \"../../store/reducers/exportSlice\";\r\n\r\nconst Schemas = () =>{\r\n    const uploadData = useAppSelector(state => state.export);\r\n    const newUploadData = {...uploadData}\r\n    const dispatch = useAppDispatch();\r\n    const componentValue = {...uploadData.components}\r\n    const schemasValue = {...componentValue.schemas}\r\n    const schemasObj = useAppSelector(state=>state.schema.schemas);  \r\n    const lengthObj = Object.keys(schemasObj).length\r\n    const saveData = () => {\r\n        componentValue[\"schemas\"] = schemasObj;\r\n        newUploadData[\"components\"] = componentValue;\r\n        dispatch(exportData({...newUploadData}));\r\n    }\r\n    const addSchema = () => {\r\n        const newObj =  {\r\n            \"NewSchema\": {\r\n            \"type\": \"object\"\r\n          }\r\n        }\r\n        const addObjs = {...schemasObj, ...newObj}\r\n        dispatch(schemasData({...addObjs}))\r\n    }\r\n    useEffect(()=>{\r\n        const noData = {}\r\n        schemasValue? dispatch(schemasData({...schemasValue})) : dispatch(schemasData({...noData}))\r\n    },[uploadData])\r\n    return (\r\n        <>\r\n        <div className={styles[\"schema-addicon\"]} onClick={addSchema}><button className={styles[\"add-icon\"]} ><AddIcon fill=\"#FFFFFF\" width=\"16px\" height=\"16px\"/></button></div>\r\n        <div className={styles[\"schemas-container\"]}>\r\n            { schemasObj && Object.keys(schemasObj).map((schemaKey,index)=>{\r\n                     return <SchemasList schemaKey={schemaKey} index={index} />\r\n            })\r\n           }\r\n        </div>\r\n        <div className={styles[\"schema-icon\"]}>\r\n              {lengthObj>0 && <Button className={styles[\"button\"]} onClick={saveData}> <span className={styles[\"button-icon\"]}>\r\n                    <SaveIcon />\r\n                </span>Save</Button>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Schemas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}