{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  value: {\n    openapi: \"3.0.0\",\n    info: {\n      title: \"Swagger Petstore\",\n      version: \"1.0.0\",\n      contact: {},\n      license: {}\n    },\n    paths: {},\n    externalDocs: {},\n    security: [],\n    servers: [],\n    components: {\n      links: {},\n      callbacks: {},\n      schemas: {}\n    }\n  }\n};\nconst uploadSlice = createSlice({\n  name: \"upload\",\n  initialState,\n  reducers: {\n    uploadFile: (state, action) => {\n      return {\n        ...state,\n        value: action.payload\n      };\n    },\n    updateServers: (state, action) => {\n      console.log(\"in update servers\", action.payload);\n      console.log(\"in update servers\", state);\n      return {\n        ...state,\n        value: {\n          ...state.value,\n          servers: action.payload\n        }\n      };\n    }\n  }\n});\nexport const {\n  uploadFile,\n  updateServers\n} = uploadSlice.actions;\nexport const selectDetails = state => state.details.value;\nexport default uploadSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","openapi","info","title","version","contact","license","paths","externalDocs","security","servers","components","links","callbacks","schemas","uploadSlice","name","reducers","uploadFile","state","action","payload","updateServers","console","log","actions","selectDetails","details","reducer"],"sources":["D:/react-typescript/intelli-gui/src/store/reducers/uploadSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport demo from \"../../utils/constant/demo.json\";\r\nimport { ServerData } from \"../../utils/constant/types\";\r\n\r\ninterface JsonDetails {\r\n  value: Object;\r\n}\r\n\r\nconst initialState: JsonDetails = {\r\n  value: {\r\n    openapi: \"3.0.0\",\r\n    info: {\r\n      title: \"Swagger Petstore\",\r\n      version: \"1.0.0\",\r\n      contact: {},\r\n      license: {},\r\n    },\r\n    paths: {},\r\n    externalDocs: {},\r\n    security: [],\r\n    servers: [],\r\n    components: {\r\n      links: {},\r\n      callbacks: {},\r\n      schemas: {},\r\n    },\r\n  },\r\n};\r\n\r\nconst uploadSlice = createSlice({\r\n  name: \"upload\",\r\n  initialState,\r\n  reducers: {\r\n    uploadFile: (state, action: PayloadAction<JsonDetails>) => {\r\n      return {\r\n        ...state,\r\n        value: action.payload,\r\n      };\r\n    },\r\n    updateServers: (state, action: PayloadAction<ServerData[]>) => {\r\n      console.log(\"in update servers\", action.payload);\r\n      console.log(\"in update servers\", state);\r\n      return {\r\n        ...state,\r\n        value: {\r\n          ...state.value,\r\n          servers: action.payload,\r\n        },\r\n      };\r\n    },\r\n  },\r\n});\r\nexport const { uploadFile, updateServers } = uploadSlice.actions;\r\nexport const selectDetails = (state: { details: JsonDetails }) =>\r\n  state.details.value;\r\nexport default uploadSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAQ7D,MAAMC,YAAyB,GAAG;EAChCC,KAAK,EAAE;IACLC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAE;MACJC,KAAK,EAAE,kBAAkB;MACzBC,OAAO,EAAE,OAAO;MAChBC,OAAO,EAAE,CAAC,CAAC;MACXC,OAAO,EAAE,CAAC;IACZ,CAAC;IACDC,KAAK,EAAE,CAAC,CAAC;IACTC,YAAY,EAAE,CAAC,CAAC;IAChBC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;MACVC,KAAK,EAAE,CAAC,CAAC;MACTC,SAAS,EAAE,CAAC,CAAC;MACbC,OAAO,EAAE,CAAC;IACZ;EACF;AACF,CAAC;AAED,MAAMC,WAAW,GAAGjB,WAAW,CAAC;EAC9BkB,IAAI,EAAE,QAAQ;EACdjB,YAAY;EACZkB,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAkC,KAAK;MACzD,OAAO;QACL,GAAGD,KAAK;QACRnB,KAAK,EAAEoB,MAAM,CAACC;MAChB,CAAC;IACH,CAAC;IACDC,aAAa,EAAEA,CAACH,KAAK,EAAEC,MAAmC,KAAK;MAC7DG,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,MAAM,CAACC,OAAO,CAAC;MAChDE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEL,KAAK,CAAC;MACvC,OAAO;QACL,GAAGA,KAAK;QACRnB,KAAK,EAAE;UACL,GAAGmB,KAAK,CAACnB,KAAK;UACdU,OAAO,EAAEU,MAAM,CAACC;QAClB;MACF,CAAC;IACH;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEH,UAAU;EAAEI;AAAc,CAAC,GAAGP,WAAW,CAACU,OAAO;AAChE,OAAO,MAAMC,aAAa,GAAIP,KAA+B,IAC3DA,KAAK,CAACQ,OAAO,CAAC3B,KAAK;AACrB,eAAee,WAAW,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}