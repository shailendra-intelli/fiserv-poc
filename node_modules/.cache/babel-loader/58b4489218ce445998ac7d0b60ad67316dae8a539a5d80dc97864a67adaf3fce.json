{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\api-validator\\\\ApiValidator.tsx\",\n  _s = $RefreshSig$();\nimport { ToggleBtnGroup } from \"intelli-ui-components-library\";\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport SnackBar from \"../snackbar/SnackBar\";\nimport GeneratePostmanCollection from \"./GeneratePostmanCollection\";\nimport RunPostmanCollection from \"./RunPostmanCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:8080\";\nconst ApiValidator = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const uploadData = useAppSelector(state => state.upload);\n  const [selectedTab, setSelectedTab] = useState(\"generate-postman\");\n  const [modalData, setModalData] = useState({\n    title: \"\",\n    description: \"\",\n    onConfirm: () => {},\n    showModal: false\n  });\n  const [isCollectionFileDownloaded, setIsCollectionFileDownloaded] = useState(false);\n  const closeModal = () => {\n    setModalData({\n      title: \"\",\n      description: \"\",\n      onConfirm: () => {},\n      showModal: false\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToggleBtnGroup, {\n      onToggle: (e, val) => setSelectedTab(val),\n      selectedTab: selectedTab,\n      shouldSelectByDefault: true,\n      borderBottom: false,\n      disabled: true,\n      styleObj: {\n        bgColor: \"#00b8d9\",\n        borderColor: \"#00b8d9\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToggleBtnGroup.Btn, {\n        value: \"generate-postman\",\n        children: \"Generate Postman Collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleBtnGroup.Btn, {\n        value: \"run-postman\",\n        children: \"Run Postman Collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), selectedTab === \"generate-postman\" && /*#__PURE__*/_jsxDEV(GeneratePostmanCollection, {\n      modalData: modalData,\n      onCloseModal: closeModal,\n      isCollectionFileDownloaded: isCollectionFileDownloaded,\n      setIsCollectionFileDownloaded: setIsCollectionFileDownloaded,\n      onChangeModalData: data => setModalData(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), selectedTab === \"run-postman\" && /*#__PURE__*/_jsxDEV(RunPostmanCollection, {\n      modalData: modalData,\n      onCloseModal: closeModal,\n      isCollectionFileDownloaded: isCollectionFileDownloaded,\n      setIsCollectionFileDownloaded: setIsCollectionFileDownloaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SnackBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ApiValidator, \"qtuFZdf3vt7qAybn0/6FcYH3PmY=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = ApiValidator;\nexport default ApiValidator;\nvar _c;\n$RefreshReg$(_c, \"ApiValidator\");","map":{"version":3,"names":["ToggleBtnGroup","useState","useAppDispatch","useAppSelector","SnackBar","GeneratePostmanCollection","RunPostmanCollection","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_URL","ApiValidator","_s","dispatch","uploadData","state","upload","selectedTab","setSelectedTab","modalData","setModalData","title","description","onConfirm","showModal","isCollectionFileDownloaded","setIsCollectionFileDownloaded","closeModal","children","onToggle","e","val","shouldSelectByDefault","borderBottom","disabled","styleObj","bgColor","borderColor","Btn","value","fileName","_jsxFileName","lineNumber","columnNumber","onCloseModal","onChangeModalData","data","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/api-validator/ApiValidator.tsx"],"sourcesContent":["import {\r\n  Button,\r\n  FileUpload,\r\n  Checkbox,\r\n  Radio,\r\n  ToggleBtnGroup,\r\n} from \"intelli-ui-components-library\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport { uploadFile } from \"../../store/reducers/uploadSlice\";\r\nimport { toastFile } from \"../../store/reducers/showToastSlice\";\r\nimport DemoJson from \"../../utils/constant/demo.json\";\r\nimport { DeleteIcon, UploadIcon, PawIcon } from \"../../assets/icons\";\r\nimport SnackBar from \"../snackbar/SnackBar\";\r\nimport Modals from \"../modals/Modals\";\r\nimport { exportData } from \"../../store/reducers/exportSlice\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport GeneratePostmanCollection from \"./GeneratePostmanCollection\";\r\nimport RunPostmanCollection from \"./RunPostmanCollection\";\r\n\r\nconst BASE_URL = \"http://localhost:8080\";\r\n\r\nconst ApiValidator = () => {\r\n  const dispatch = useAppDispatch();\r\n  const uploadData = useAppSelector((state) => state.upload);\r\n\r\n  const [selectedTab, setSelectedTab] = useState(\"generate-postman\");\r\n  const [modalData, setModalData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    onConfirm: () => {},\r\n    showModal: false,\r\n  });\r\n  const [isCollectionFileDownloaded, setIsCollectionFileDownloaded] =\r\n    useState(false);\r\n\r\n  const closeModal = () => {\r\n    setModalData({\r\n      title: \"\",\r\n      description: \"\",\r\n      onConfirm: () => {},\r\n      showModal: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToggleBtnGroup\r\n        onToggle={(e: any, val: any) => setSelectedTab(val)}\r\n        selectedTab={selectedTab}\r\n        shouldSelectByDefault={true}\r\n        borderBottom={false}\r\n        disabled\r\n        styleObj={{\r\n          bgColor: \"#00b8d9\",\r\n          borderColor: \"#00b8d9\",\r\n        }}\r\n      >\r\n        <ToggleBtnGroup.Btn value=\"generate-postman\">\r\n          Generate Postman Collection\r\n        </ToggleBtnGroup.Btn>\r\n        <ToggleBtnGroup.Btn value=\"run-postman\">\r\n          Run Postman Collection\r\n        </ToggleBtnGroup.Btn>\r\n      </ToggleBtnGroup>\r\n      {selectedTab === \"generate-postman\" && (\r\n        <GeneratePostmanCollection\r\n          modalData={modalData}\r\n          onCloseModal={closeModal}\r\n          isCollectionFileDownloaded={isCollectionFileDownloaded}\r\n          setIsCollectionFileDownloaded={setIsCollectionFileDownloaded}\r\n          onChangeModalData={(data) => setModalData(data)}\r\n        />\r\n      )}\r\n      {selectedTab === \"run-postman\" && (\r\n        <RunPostmanCollection\r\n          modalData={modalData}\r\n          onCloseModal={closeModal}\r\n          isCollectionFileDownloaded={isCollectionFileDownloaded}\r\n          setIsCollectionFileDownloaded={setIsCollectionFileDownloaded}\r\n        />\r\n      )}\r\n      <SnackBar />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApiValidator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}