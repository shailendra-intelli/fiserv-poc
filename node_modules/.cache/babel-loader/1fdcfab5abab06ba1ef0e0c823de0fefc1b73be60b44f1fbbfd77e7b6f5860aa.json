{"ast":null,"code":"/*! @azure/msal-browser v3.5.0 2023-11-07 */\n'use strict';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NavigationClient {\n  /**\n   * Navigates to other pages within the same web application\n   * @param url\n   * @param options\n   */\n  navigateInternal(url, options) {\n    return NavigationClient.defaultNavigateWindow(url, options);\n  }\n  /**\n   * Navigates to other pages outside the web application i.e. the Identity Provider\n   * @param url\n   * @param options\n   */\n  navigateExternal(url, options) {\n    return NavigationClient.defaultNavigateWindow(url, options);\n  }\n  /**\n   * Default navigation implementation invoked by the internal and external functions\n   * @param url\n   * @param options\n   */\n  static defaultNavigateWindow(url, options) {\n    if (options.noHistory) {\n      window.location.replace(url);\n    } else {\n      window.location.assign(url);\n    }\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(true);\n      }, options.timeout);\n    });\n  }\n}\nexport { NavigationClient };","map":{"version":3,"names":["NavigationClient","defaultNavigateWindow","url","options"],"sources":["D:\\react-typescript\\intelli-gui\\node_modules\\@azure\\msal-browser\\src\\navigation\\NavigationClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INavigationClient } from \"./INavigationClient\";\nimport { NavigationOptions } from \"./NavigationOptions\";\n\nexport class NavigationClient implements INavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url\n     * @param options\n     */\n    navigateInternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url\n     * @param options\n     */\n    navigateExternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url\n     * @param options\n     */\n    private static defaultNavigateWindow(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        if (options.noHistory) {\n            window.location.replace(url);\n        } else {\n            window.location.assign(url);\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n"],"mappings":";;;AAKA;AACA;AAEA;AACI;;;;AAIG;AACH;AAOA;;;;EAIG;AACH;AAOA;;;;IAIG,OAAAA,gBAAA,CAAAC,qBAAA,CAAAC,GAAA,EAAAC,OAAA;;EAiBN"},"metadata":{},"sourceType":"module","externalDependencies":[]}