{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\sanackbar\\\\SnackBar.tsx\",\n  _s = $RefreshSig$();\nimport { Snackbar } from \"intelli-ui-components-library\";\nimport { useState, useEffect } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { toastFile } from \"../../store/reducers/showToastSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnackBar = () => {\n  _s();\n  const newState = useAppSelector(state => state.toast.toastObj);\n  const [showToast, setShowToast] = useState(newState.isVisible);\n  const dispatch = useAppDispatch();\n  const handleClose = () => {\n    dispatch(toastFile({\n      message: \"\",\n      bgColor: \"\",\n      isVisible: false\n    }));\n  };\n  useEffect(() => {\n    setShowToast(newState.isVisible);\n  }, [newState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showToast && /*#__PURE__*/_jsxDEV(Snackbar, {\n      message: newState.message,\n      isVisible: newState.isVisible,\n      bgColor: newState.bgColor,\n      onCloseClick: handleClose,\n      position: \"bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }, this);\n};\n_s(SnackBar, \"rm1XtNPbSTgFLpCkuyNvNMwMM+k=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = SnackBar;\nexport default SnackBar;\nvar _c;\n$RefreshReg$(_c, \"SnackBar\");","map":{"version":3,"names":["Snackbar","useState","useEffect","useAppSelector","useAppDispatch","toastFile","jsxDEV","_jsxDEV","SnackBar","_s","newState","state","toast","toastObj","showToast","setShowToast","isVisible","dispatch","handleClose","message","bgColor","children","onCloseClick","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/sanackbar/SnackBar.tsx"],"sourcesContent":["import { Snackbar } from \"intelli-ui-components-library\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\r\nimport { toastFile } from \"../../store/reducers/showToastSlice\";\r\nconst SnackBar = () => {\r\n    const newState = useAppSelector(state=>state.toast.toastObj);\r\n    const [showToast, setShowToast] = useState(newState.isVisible);\r\n    const dispatch = useAppDispatch();\r\n    const handleClose = () => {\r\n      dispatch(toastFile({\r\n          message:\"\",\r\n          bgColor:\"\",\r\n          isVisible:false\r\n      }))\r\n    };\r\n    useEffect(()=>{\r\n        setShowToast(newState.isVisible);\r\n    },[newState]);\r\n   return (\r\n          <div>\r\n            {\r\n              showToast && (<Snackbar message={newState.message} isVisible={newState.isVisible} bgColor={newState.bgColor} onCloseClick={handleClose} position=\"bottom\"/>)\r\n            }\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default SnackBar;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,+BAA+B;AACxD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,cAAc,EAAEC,cAAc,QAAQ,mBAAmB;AAClE,SAASC,SAAS,QAAQ,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGP,cAAc,CAACQ,KAAK,IAAEA,KAAK,CAACC,KAAK,CAACC,QAAQ,CAAC;EAC5D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACS,QAAQ,CAACM,SAAS,CAAC;EAC9D,MAAMC,QAAQ,GAAGb,cAAc,CAAC,CAAC;EACjC,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACZ,SAAS,CAAC;MACfc,OAAO,EAAC,EAAE;MACVC,OAAO,EAAC,EAAE;MACVJ,SAAS,EAAC;IACd,CAAC,CAAC,CAAC;EACL,CAAC;EACDd,SAAS,CAAC,MAAI;IACVa,YAAY,CAACL,QAAQ,CAACM,SAAS,CAAC;EACpC,CAAC,EAAC,CAACN,QAAQ,CAAC,CAAC;EACd,oBACOH,OAAA;IAAAc,QAAA,EAEIP,SAAS,iBAAKP,OAAA,CAACP,QAAQ;MAACmB,OAAO,EAAET,QAAQ,CAACS,OAAQ;MAACH,SAAS,EAAEN,QAAQ,CAACM,SAAU;MAACI,OAAO,EAAEV,QAAQ,CAACU,OAAQ;MAACE,YAAY,EAAEJ,WAAY;MAACK,QAAQ,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3J,CAAC;AAEhB,CAAC;AAAAlB,EAAA,CArBKD,QAAQ;EAAA,QACOL,cAAc,EAEdC,cAAc;AAAA;AAAAwB,EAAA,GAH7BpB,QAAQ;AAuBd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}