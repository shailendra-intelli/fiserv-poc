{"ast":null,"code":"/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\n\nimport { ThrottlingConstants } from '../../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ThrottlingEntity {\n  /**\n   * validates if a given cache entry is \"Throttling\", parses <key,value>\n   * @param key\n   * @param entity\n   */\n  static isThrottlingEntity(key, entity) {\n    let validateKey = false;\n    if (key) {\n      validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n    }\n    let validateEntity = true;\n    if (entity) {\n      validateEntity = entity.hasOwnProperty(\"throttleTime\");\n    }\n    return validateKey && validateEntity;\n  }\n}\nexport { ThrottlingEntity };","map":{"version":3,"names":["ThrottlingEntity","isThrottlingEntity","key","entity","validateKey"],"sources":["D:\\react-typescript\\intelli-gui\\node_modules\\@azure\\msal-common\\src\\cache\\entities\\ThrottlingEntity.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ThrottlingConstants } from \"../../utils/Constants\";\n\nexport class ThrottlingEntity {\n    // Unix-time value representing the expiration of the throttle\n    throttleTime: number;\n    // Information provided by the server\n    error?: string;\n    errorCodes?: Array<string>;\n    errorMessage?: string;\n    subError?: string;\n\n    /**\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isThrottlingEntity(key: string, entity?: object): boolean {\n        let validateKey: boolean = false;\n        if (key) {\n            validateKey =\n                key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n        }\n\n        let validateEntity: boolean = true;\n        if (entity) {\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n"],"mappings":";;;;;AAOA;;;AAKI;AAEQ,MAACA,gBAAS;EAElB;;;;AAIG;EACH,OAAOC,kBAAkBA,CAACC,GAAG,EAAEC,MAAM,EAAE;IAc1C,IAAAC,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}