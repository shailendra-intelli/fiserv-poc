{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport { AuthError, InteractionRequiredAuthError } from '@azure/msal-common';\nimport { createBrowserAuthError } from './BrowserAuthError.mjs';\nimport { noNetworkConnectivity, userCancelled } from './BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst INVALID_METHOD_ERROR = -2147186943;\nconst NativeStatusCode = {\n  USER_INTERACTION_REQUIRED: \"USER_INTERACTION_REQUIRED\",\n  USER_CANCEL: \"USER_CANCEL\",\n  NO_NETWORK: \"NO_NETWORK\",\n  TRANSIENT_ERROR: \"TRANSIENT_ERROR\",\n  PERSISTENT_ERROR: \"PERSISTENT_ERROR\",\n  DISABLED: \"DISABLED\",\n  ACCOUNT_UNAVAILABLE: \"ACCOUNT_UNAVAILABLE\"\n};\nconst NativeAuthErrorMessage = {\n  extensionError: {\n    code: \"ContentError\"\n  },\n  userSwitch: {\n    code: \"user_switch\",\n    desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n  },\n  tokensNotFoundInCache: {\n    code: \"tokens_not_found_in_internal_memory_cache\",\n    desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\n  }\n};\nclass NativeAuthError extends AuthError {\n  constructor(errorCode, description, ext) {\n    super(errorCode, description);\n    Object.setPrototypeOf(this, NativeAuthError.prototype);\n    this.name = \"NativeAuthError\";\n    this.ext = ext;\n  }\n  /**\n   * These errors should result in a fallback to the 'standard' browser based auth flow.\n   */\n  isFatal() {\n    if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n      return true;\n    }\n    if (this.ext && this.ext.error && this.ext.error === INVALID_METHOD_ERROR) {\n      return true;\n    }\n    switch (this.errorCode) {\n      case NativeAuthErrorMessage.extensionError.code:\n        return true;\n      default:\n        return false;\n    }\n  }\n  /**\n   * Create the appropriate error object based on the WAM status code.\n   * @param code\n   * @param description\n   * @param ext\n   * @returns\n   */\n  static createError(code, description, ext) {\n    if (ext && ext.status) {\n      switch (ext.status) {\n        case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n          return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n        case NativeStatusCode.USER_INTERACTION_REQUIRED:\n          return new InteractionRequiredAuthError(code, description);\n        case NativeStatusCode.USER_CANCEL:\n          return createBrowserAuthError(userCancelled);\n        case NativeStatusCode.NO_NETWORK:\n          return createBrowserAuthError(noNetworkConnectivity);\n      }\n    }\n    return new NativeAuthError(code, description, ext);\n  }\n  /**\n   * Creates user switch error when the user chooses a different account in the native broker prompt\n   * @returns\n   */\n  static createUserSwitchError() {\n    return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n  }\n  /**\n   * Creates a tokens not found error when the internal cache look up fails\n   * @returns NativeAuthError: tokensNotFoundInCache\n   */\n  static createTokensNotFoundInCacheError() {\n    return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n  }\n}\nexport { NativeAuthError, NativeAuthErrorMessage, NativeStatusCode };","map":{"version":3,"names":["INVALID_METHOD_ERROR","NativeStatusCode","USER_INTERACTION_REQUIRED","NativeAuthErrorMessage","extensionError","code","constructor","errorCode","description","ext","Object","setPrototypeOf","NativeAuthError","prototype"],"sources":["D:\\react-typescript\\intelli-gui\\node_modules\\@azure\\msal-browser\\src\\error\\NativeAuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError, InteractionRequiredAuthError } from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"./BrowserAuthError\";\n\nexport type OSError = {\n    error?: number;\n    protocol_error?: string;\n    properties?: object;\n    status?: string;\n    retryable?: boolean;\n};\n\nconst INVALID_METHOD_ERROR = -2147186943;\n\nexport const NativeStatusCode = {\n    USER_INTERACTION_REQUIRED: \"USER_INTERACTION_REQUIRED\",\n    USER_CANCEL: \"USER_CANCEL\",\n    NO_NETWORK: \"NO_NETWORK\",\n    TRANSIENT_ERROR: \"TRANSIENT_ERROR\",\n    PERSISTENT_ERROR: \"PERSISTENT_ERROR\",\n    DISABLED: \"DISABLED\",\n    ACCOUNT_UNAVAILABLE: \"ACCOUNT_UNAVAILABLE\",\n} as const;\nexport type NativeStatusCode =\n    (typeof NativeStatusCode)[keyof typeof NativeStatusCode];\n\nexport const NativeAuthErrorMessage = {\n    extensionError: {\n        code: \"ContentError\",\n    },\n    userSwitch: {\n        code: \"user_switch\",\n        desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\n    },\n    tokensNotFoundInCache: {\n        code: \"tokens_not_found_in_internal_memory_cache\",\n        desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\",\n    },\n};\n\nexport class NativeAuthError extends AuthError {\n    ext: OSError | undefined;\n\n    constructor(errorCode: string, description: string, ext?: OSError) {\n        super(errorCode, description);\n\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n\n    /**\n     * These errors should result in a fallback to the 'standard' browser based auth flow.\n     */\n    isFatal(): boolean {\n        if (\n            this.ext &&\n            this.ext.status &&\n            (this.ext.status === NativeStatusCode.PERSISTENT_ERROR ||\n                this.ext.status === NativeStatusCode.DISABLED)\n        ) {\n            return true;\n        }\n\n        if (\n            this.ext &&\n            this.ext.error &&\n            this.ext.error === INVALID_METHOD_ERROR\n        ) {\n            return true;\n        }\n\n        switch (this.errorCode) {\n            case NativeAuthErrorMessage.extensionError.code:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Create the appropriate error object based on the WAM status code.\n     * @param code\n     * @param description\n     * @param ext\n     * @returns\n     */\n    static createError(\n        code: string,\n        description: string,\n        ext?: OSError\n    ): AuthError {\n        if (ext && ext.status) {\n            switch (ext.status) {\n                case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n                    return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n                case NativeStatusCode.USER_INTERACTION_REQUIRED:\n                    return new InteractionRequiredAuthError(code, description);\n                case NativeStatusCode.USER_CANCEL:\n                    return createBrowserAuthError(\n                        BrowserAuthErrorCodes.userCancelled\n                    );\n                case NativeStatusCode.NO_NETWORK:\n                    return createBrowserAuthError(\n                        BrowserAuthErrorCodes.noNetworkConnectivity\n                    );\n            }\n        }\n\n        return new NativeAuthError(code, description, ext);\n    }\n\n    /**\n     * Creates user switch error when the user chooses a different account in the native broker prompt\n     * @returns\n     */\n    static createUserSwitchError(): NativeAuthError {\n        return new NativeAuthError(\n            NativeAuthErrorMessage.userSwitch.code,\n            NativeAuthErrorMessage.userSwitch.desc\n        );\n    }\n\n    /**\n     * Creates a tokens not found error when the internal cache look up fails\n     * @returns NativeAuthError: tokensNotFoundInCache\n     */\n    static createTokensNotFoundInCacheError(): NativeAuthError {\n        return new NativeAuthError(\n            NativeAuthErrorMessage.tokensNotFoundInCache.code,\n            NativeAuthErrorMessage.tokensNotFoundInCache.desc\n        );\n    }\n}\n"],"mappings":";;;;;;;AAKA;AAMA;;;MAKaA,oBAAW;AACtB,MAAAC,gBAAA;EAIFC,yBAA6B;;;;;;;;AAQlB,MAAAC,sBAAA;EACXC,cAAY;IAGZC,IAAA;;;;;;;;;;;;EAYEC,YAAAC,SAAA,EAAAC,WAAA,EAAAC,GAAA;IAEW,MAAAF,SAAA,EAAAC,WAAgB;IACpBE,MAAA,CAAAC,cAAoB,OAAAC,eAAA,CAAAC,SAAA;aAEJ,oBAAqB;IAQ1C,KAAAJ,GAAA,GAAAA,GAAA;;EAEG;AACH;AA0BA;;;MAMG;IACH;IAyBA,SAAAA,GAAA,I;MAGG;;IAQH,aAAAF,SAAA;;;MAGG;QACoC;IAM1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}