{"ast":null,"code":"/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\n\nimport { Constants } from '../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst AuthErrorMessage = {\n  unexpectedError: {\n    code: \"unexpected_error\",\n    desc: \"Unexpected error in authentication.\"\n  },\n  postRequestFailed: {\n    code: \"post_request_failed\",\n    desc: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\"\n  }\n};\n/**\n * General error class thrown by the MSAL.js library.\n */\nclass AuthError extends Error {\n  constructor(errorCode, errorMessage, suberror) {\n    const errorString = errorMessage ? `${errorCode}: ${errorMessage}` : errorCode;\n    super(errorString);\n    Object.setPrototypeOf(this, AuthError.prototype);\n    this.errorCode = errorCode || Constants.EMPTY_STRING;\n    this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n    this.subError = suberror || Constants.EMPTY_STRING;\n    this.name = \"AuthError\";\n  }\n  setCorrelationId(correlationId) {\n    this.correlationId = correlationId;\n  }\n  /**\n   * Creates an error that is thrown when something unexpected happens in the library.\n   * @param errDesc\n   */\n  static createUnexpectedError(errDesc) {\n    return new AuthError(AuthErrorMessage.unexpectedError.code, `${AuthErrorMessage.unexpectedError.desc}: ${errDesc}`);\n  }\n  /**\n   * Creates an error for post request failures.\n   * @param errDesc\n   * @returns\n   */\n  static createPostRequestFailed(errDesc) {\n    return new AuthError(AuthErrorMessage.postRequestFailed.code, `${AuthErrorMessage.postRequestFailed.desc}: ${errDesc}`);\n  }\n}\nexport { AuthError, AuthErrorMessage };","map":{"version":3,"names":["postRequestFailed","desc","AuthError","Error","errorString","errorMessage","errorCode","Object","setPrototypeOf","prototype","Constants","EMPTY_STRING","name","setCorrelationId","correlationId","createUnexpectedError","errDesc"],"sources":["D:\\react-typescript\\intelli-gui\\node_modules\\@azure\\msal-common\\src\\error\\AuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const AuthErrorMessage = {\n    unexpectedError: {\n        code: \"unexpected_error\",\n        desc: \"Unexpected error in authentication.\",\n    },\n    postRequestFailed: {\n        code: \"post_request_failed\",\n        desc: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n    },\n};\n\n/**\n * General error class thrown by the MSAL.js library.\n */\nexport class AuthError extends Error {\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    /**\n     * Describes the subclass of an error\n     */\n    subError: string;\n\n    /**\n     * CorrelationId associated with the error\n     */\n    correlationId: string;\n\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n\n    setCorrelationId(correlationId: string): void {\n        this.correlationId = correlationId;\n    }\n\n    /**\n     * Creates an error that is thrown when something unexpected happens in the library.\n     * @param errDesc\n     */\n    static createUnexpectedError(errDesc: string): AuthError {\n        return new AuthError(\n            AuthErrorMessage.unexpectedError.code,\n            `${AuthErrorMessage.unexpectedError.desc}: ${errDesc}`\n        );\n    }\n\n    /**\n     * Creates an error for post request failures.\n     * @param errDesc\n     * @returns\n     */\n    static createPostRequestFailed(errDesc: string): AuthError {\n        return new AuthError(\n            AuthErrorMessage.postRequestFailed.code,\n            `${AuthErrorMessage.postRequestFailed.desc}: ${errDesc}`\n        );\n    }\n}\n"],"mappings":";;;;;AAOA;;AAEG;AACH;;;;;;;;GASE;EAEFA,iBAAA;;IAEGC,IAAA;EACH;AACI;;AAEG;;AAGH,MAAAC,SAAA,SAAAC,KAAA;;IAEG,MAAAC,WAAA,GAAAC,YAAA,GACS,GAAAC,SAAS,KAAAD,YAAA,KAErBC,SAAA;;IAEGC,MAAA,CAAAC,cAAA,OAAAN,SAAA,CAAAO,SAAA;IACK,KAAAH,SAAS,GAAAA,SAAA,IAAAI,SAAA,CAAAC,YAAA;IAEjB,KAAAN,YAAA,GAAAA,YAAA,IAAAK,SAAA,CAAAC,YAAA;;IAEG,KAAAC,IAAA;;EAGSC,iBAAAC,aAAkB,EAAE;IAahC,KAAAA,aAAiB,GAAAA,aAAqB;EAItC;;;AAGG;AACH;EAOA,OAAAC,sBAAAC,OAAA;;;;AAIG;AACH;AAMH"},"metadata":{},"sourceType":"module","externalDependencies":[]}