{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\schemas\\\\Schemas.tsx\",\n  _s = $RefreshSig$();\nimport SchemasList from \"./SchemasList\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useEffect } from \"react\";\nimport { schemasData } from \"../../store/reducers/schemasSlice\";\nimport styles from \"./schemas.module.scss\";\nimport { AddIcon, SaveIcon } from \"../../assets/icons\";\nimport { Button, Tooltip } from \"intelli-ui-components-library\";\nimport { exportData } from \"../../store/reducers/exportSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Schemas = () => {\n  _s();\n  const uploadData = useAppSelector(state => state.export);\n  const newUploadData = {\n    ...uploadData\n  };\n  const dispatch = useAppDispatch();\n  const componentValue = {\n    ...uploadData.components\n  };\n  const schemasValue = {\n    ...componentValue.schemas\n  };\n  const schemasObj = useAppSelector(state => state.schema.schemas);\n  const lengthObj = Object.keys(schemasObj).length;\n  const saveData = () => {\n    componentValue[\"schemas\"] = schemasObj;\n    newUploadData[\"components\"] = componentValue;\n    dispatch(exportData({\n      ...newUploadData\n    }));\n  };\n  const addSchema = () => {\n    const newObj = {\n      NewSchema: {\n        type: \"object\"\n      }\n    };\n    const addObjs = {\n      ...schemasObj,\n      ...newObj\n    };\n    dispatch(schemasData({\n      ...addObjs\n    }));\n  };\n  useEffect(() => {\n    const noData = {};\n    schemasValue ? dispatch(schemasData({\n      ...schemasValue\n    })) : dispatch(schemasData({\n      ...noData\n    }));\n  }, [uploadData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"schema-addicon\"],\n      onClick: addSchema,\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        message: \"Add new schema\",\n        position: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles[\"add-icon\"],\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            fill: \"#FFFFFF\",\n            width: \"16px\",\n            height: \"16px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"schemas-container\"],\n      children: schemasObj && Object.keys(schemasObj).map((schemaKey, index) => {\n        return /*#__PURE__*/_jsxDEV(SchemasList, {\n          schemaKey: schemaKey,\n          index: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"schema-icon\"],\n      children: lengthObj > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        className: styles[\"button\"],\n        onClick: saveData,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles[\"button-icon\"],\n          children: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), \"Save\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Schemas, \"hQf2vTgzC25gLn/fFzOQRgArkrg=\", false, function () {\n  return [useAppSelector, useAppDispatch, useAppSelector];\n});\n_c = Schemas;\nexport default Schemas;\nvar _c;\n$RefreshReg$(_c, \"Schemas\");","map":{"version":3,"names":["SchemasList","useAppSelector","useAppDispatch","useEffect","schemasData","styles","AddIcon","SaveIcon","Button","Tooltip","exportData","jsxDEV","_jsxDEV","Fragment","_Fragment","Schemas","_s","uploadData","state","export","newUploadData","dispatch","componentValue","components","schemasValue","schemas","schemasObj","schema","lengthObj","Object","keys","length","saveData","addSchema","newObj","NewSchema","type","addObjs","noData","children","className","onClick","message","position","fill","width","height","fileName","_jsxFileName","lineNumber","columnNumber","map","schemaKey","index","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/schemas/Schemas.tsx"],"sourcesContent":["import SchemasList from \"./SchemasList\";\r\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\r\nimport { useEffect } from \"react\";\r\nimport { schemasData } from \"../../store/reducers/schemasSlice\";\r\nimport styles from \"./schemas.module.scss\";\r\nimport { AddIcon, SaveIcon } from \"../../assets/icons\";\r\nimport { Button, Tooltip } from \"intelli-ui-components-library\";\r\nimport { exportData } from \"../../store/reducers/exportSlice\";\r\n\r\nconst Schemas = () => {\r\n  const uploadData = useAppSelector((state) => state.export);\r\n  const newUploadData = { ...uploadData };\r\n  const dispatch = useAppDispatch();\r\n  const componentValue = { ...uploadData.components };\r\n  const schemasValue = { ...componentValue.schemas };\r\n  const schemasObj = useAppSelector((state) => state.schema.schemas);\r\n  const lengthObj = Object.keys(schemasObj).length;\r\n  const saveData = () => {\r\n    componentValue[\"schemas\"] = schemasObj;\r\n    newUploadData[\"components\"] = componentValue;\r\n    dispatch(exportData({ ...newUploadData }));\r\n  };\r\n  const addSchema = () => {\r\n    const newObj = {\r\n      NewSchema: {\r\n        type: \"object\",\r\n      },\r\n    };\r\n    const addObjs = { ...schemasObj, ...newObj };\r\n    dispatch(schemasData({ ...addObjs }));\r\n  };\r\n  useEffect(() => {\r\n    const noData = {};\r\n    schemasValue\r\n      ? dispatch(schemasData({ ...schemasValue }))\r\n      : dispatch(schemasData({ ...noData }));\r\n  }, [uploadData]);\r\n  return (\r\n    <>\r\n      <div className={styles[\"schema-addicon\"]} onClick={addSchema}>\r\n        <Tooltip message=\"Add new schema\" position=\"top\">\r\n          <button className={styles[\"add-icon\"]}>\r\n            <AddIcon fill=\"#FFFFFF\" width=\"16px\" height=\"16px\" />\r\n          </button>\r\n        </Tooltip>\r\n      </div>\r\n      <div className={styles[\"schemas-container\"]}>\r\n        {schemasObj &&\r\n          Object.keys(schemasObj).map((schemaKey, index) => {\r\n            return <SchemasList schemaKey={schemaKey} index={index} />;\r\n          })}\r\n      </div>\r\n      <div className={styles[\"schema-icon\"]}>\r\n        {lengthObj > 0 && (\r\n          <Button className={styles[\"button\"]} onClick={saveData}>\r\n            {\" \"}\r\n            <span className={styles[\"button-icon\"]}>\r\n              <SaveIcon />\r\n            </span>\r\n            Save\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Schemas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}