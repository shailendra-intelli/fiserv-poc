{"ast":null,"code":"/*! @azure/msal-browser v3.9.0 2024-02-07 */\n'use strict';\n\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, PerformanceEvents, TimeUtils } from '@azure/msal-common';\nimport { InteractionType } from '../utils/BrowserConstants.mjs';\nimport { CryptoOps } from '../crypto/CryptoOps.mjs';\nimport { NestedAppAuthAdapter } from '../naa/mapping/NestedAppAuthAdapter.mjs';\nimport { NestedAppAuthError } from '../error/NestedAppAuthError.mjs';\nimport { EventHandler } from '../event/EventHandler.mjs';\nimport { EventType } from '../event/EventType.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NestedAppAuthController {\n  constructor(operatingContext) {\n    this.operatingContext = operatingContext;\n    const proxy = this.operatingContext.getBridgeProxy();\n    if (proxy !== undefined) {\n      this.bridgeProxy = proxy;\n    } else {\n      throw new Error(\"unexpected: bridgeProxy is undefined\");\n    }\n    // Set the configuration.\n    this.config = operatingContext.getConfig();\n    // Initialize logger\n    this.logger = this.operatingContext.getLogger();\n    // Initialize performance client\n    this.performanceClient = this.config.telemetry.client;\n    // Initialize the crypto class.\n    this.browserCrypto = operatingContext.isBrowserEnvironment() ? new CryptoOps(this.logger, this.performanceClient) : DEFAULT_CRYPTO_IMPLEMENTATION;\n    this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n    this.nestedAppAuthAdapter = new NestedAppAuthAdapter(this.config.auth.clientId, this.config.auth.clientCapabilities, this.browserCrypto, this.logger);\n  }\n  getBrowserStorage() {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  getEventHandler() {\n    return this.eventHandler;\n  }\n  static async createController(operatingContext) {\n    const controller = new NestedAppAuthController(operatingContext);\n    return Promise.resolve(controller);\n  }\n  initialize() {\n    // do nothing not required by this controller\n    return Promise.resolve();\n  }\n  async acquireTokenInteractive(request) {\n    this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, request);\n    const atPopupMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenPopup, request.correlationId);\n    atPopupMeasurement?.add({\n      nestedAppAuthRequest: true\n    });\n    try {\n      const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(request);\n      const reqTimestamp = TimeUtils.nowSeconds();\n      const response = await this.bridgeProxy.getTokenInteractive(naaRequest);\n      const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response, reqTimestamp);\n      this.operatingContext.setActiveAccount(result.account);\n      this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\n      atPopupMeasurement.add({\n        accessTokenSize: result.accessToken.length,\n        idTokenSize: result.idToken.length\n      });\n      atPopupMeasurement.end({\n        success: true,\n        requestId: result.requestId\n      });\n      return result;\n    } catch (e) {\n      const error = this.nestedAppAuthAdapter.fromBridgeError(e);\n      this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\n      atPopupMeasurement.end({\n        errorCode: error.errorCode,\n        subErrorCode: error.subError,\n        success: false\n      });\n      throw error;\n    }\n  }\n  async acquireTokenSilentInternal(request) {\n    this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, request);\n    const ssoSilentMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SsoSilent, request.correlationId);\n    ssoSilentMeasurement?.increment({\n      visibilityChangeCount: 0\n    });\n    ssoSilentMeasurement?.add({\n      nestedAppAuthRequest: true\n    });\n    try {\n      const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(request);\n      const reqTimestamp = TimeUtils.nowSeconds();\n      const response = await this.bridgeProxy.getTokenSilent(naaRequest);\n      const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response, reqTimestamp);\n      this.operatingContext.setActiveAccount(result.account);\n      this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, result);\n      ssoSilentMeasurement?.add({\n        accessTokenSize: result.accessToken.length,\n        idTokenSize: result.idToken.length\n      });\n      ssoSilentMeasurement?.end({\n        success: true,\n        requestId: result.requestId\n      });\n      return result;\n    } catch (e) {\n      const error = this.nestedAppAuthAdapter.fromBridgeError(e);\n      this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, e);\n      ssoSilentMeasurement?.end({\n        errorCode: error.errorCode,\n        subErrorCode: error.subError,\n        success: false\n      });\n      throw error;\n    }\n  }\n  async acquireTokenPopup(request) {\n    return this.acquireTokenInteractive(request);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  acquireTokenRedirect(request) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  async acquireTokenSilent(silentRequest) {\n    return this.acquireTokenSilentInternal(silentRequest);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  acquireTokenByCode(request // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  acquireTokenNative(request, apiId,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  accountId // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  acquireTokenByRefreshToken(commonRequest,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  silentRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  /**\n   * Adds event callbacks to array\n   * @param callback\n   */\n  addEventCallback(callback) {\n    return this.eventHandler.addEventCallback(callback);\n  }\n  /**\n   * Removes callback with provided id from callback array\n   * @param callbackId\n   */\n  removeEventCallback(callbackId) {\n    this.eventHandler.removeEventCallback(callbackId);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  addPerformanceCallback(callback) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  removePerformanceCallback(callbackId) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  enableAccountStorageEvents() {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  disableAccountStorageEvents() {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getAccount(accountFilter) {\n    throw NestedAppAuthError.createUnsupportedError();\n    // TODO: Look at standard implementation\n  }\n  getAccountByHomeId(homeAccountId) {\n    const currentAccount = this.operatingContext.getActiveAccount();\n    if (currentAccount !== undefined) {\n      if (currentAccount.homeAccountId === homeAccountId) {\n        return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  getAccountByLocalId(localId) {\n    const currentAccount = this.operatingContext.getActiveAccount();\n    if (currentAccount !== undefined) {\n      if (currentAccount.localAccountId === localId) {\n        return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  getAccountByUsername(userName) {\n    const currentAccount = this.operatingContext.getActiveAccount();\n    if (currentAccount !== undefined) {\n      if (currentAccount.username === userName) {\n        return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  getAllAccounts() {\n    const currentAccount = this.operatingContext.getActiveAccount();\n    if (currentAccount !== undefined) {\n      return [this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount)];\n    } else {\n      return [];\n    }\n  }\n  handleRedirectPromise(hash // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  loginPopup(request // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    if (request !== undefined) {\n      return this.acquireTokenInteractive(request);\n    } else {\n      throw NestedAppAuthError.createUnsupportedError();\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  loginRedirect(request) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  logout(logoutRequest) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  logoutRedirect(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  logoutPopup(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  ssoSilent(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  request) {\n    return this.acquireTokenSilentInternal(request);\n  }\n  getTokenCache() {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  /**\n   * Returns the logger instance\n   */\n  getLogger() {\n    return this.logger;\n  }\n  /**\n   * Replaces the default logger set in configurations with new Logger with new configurations\n   * @param logger Logger instance\n   */\n  setLogger(logger) {\n    this.logger = logger;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setActiveAccount(account) {\n    /*\n     * StandardController uses this to allow the developer to set the active account\n     * in the nested app auth scenario the active account is controlled by the app hosting the nested app\n     */\n    this.logger.warning(\"nestedAppAuth does not support setActiveAccount\");\n    return;\n  }\n  getActiveAccount() {\n    const currentAccount = this.operatingContext.getActiveAccount();\n    if (currentAccount !== undefined) {\n      return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n    } else {\n      return null;\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  initializeWrapperLibrary(sku, version) {\n    /*\n     * Standard controller uses this to set the sku and version of the wrapper library in the storage\n     * we do nothing here\n     */\n    return;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setNavigationClient(navigationClient) {\n    this.logger.warning(\"setNavigationClient is not supported in nested app auth\");\n  }\n  getConfiguration() {\n    return this.config;\n  }\n  isBrowserEnv() {\n    return this.operatingContext.isBrowserEnvironment();\n  }\n  getBrowserCrypto() {\n    return this.browserCrypto;\n  }\n  getPerformanceClient() {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  getRedirectResponse() {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  preflightBrowserEnvironmentCheck(interactionType,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  setInteractionInProgress // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async clearCache(logoutRequest) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async hydrateCache(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  result,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  request) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n}\nexport { NestedAppAuthController };","map":{"version":3,"names":["NestedAppAuthController","constructor","operatingContext","proxy","getBridgeProxy","undefined","bridgeProxy","Error","config","getConfig","logger","getLogger","performanceClient","telemetry","client","browserCrypto","isBrowserEnvironment","CryptoOps","DEFAULT_CRYPTO_IMPLEMENTATION","eventHandler","EventHandler","nestedAppAuthAdapter","NestedAppAuthAdapter","auth","clientId","clientCapabilities","getBrowserStorage","NestedAppAuthError","createUnsupportedError","getEventHandler","createController","controller","Promise","resolve","initialize","acquireTokenInteractive","request","emitEvent","EventType","ACQUIRE_TOKEN_START","InteractionType","Popup","atPopupMeasurement","startMeasurement","PerformanceEvents","AcquireTokenPopup","correlationId","add","nestedAppAuthRequest","naaRequest","toNaaTokenRequest","reqTimestamp","TimeUtils","nowSeconds","response","getTokenInteractive","result","fromNaaTokenResponse","setActiveAccount","account","ACQUIRE_TOKEN_SUCCESS","accessTokenSize","accessToken","length","idTokenSize","idToken","end","success","requestId","e","error","fromBridgeError","ACQUIRE_TOKEN_FAILURE","errorCode","subErrorCode","subError","acquireTokenSilentInternal","Silent","ssoSilentMeasurement","SsoSilent","increment","visibilityChangeCount","getTokenSilent","acquireTokenPopup","acquireTokenRedirect","acquireTokenSilent","silentRequest","acquireTokenByCode","acquireTokenNative","apiId","accountId","acquireTokenByRefreshToken","commonRequest","addEventCallback","callback","removeEventCallback","callbackId","addPerformanceCallback","removePerformanceCallback","enableAccountStorageEvents","disableAccountStorageEvents","getAccount","accountFilter","getAccountByHomeId","homeAccountId","currentAccount","getActiveAccount","fromNaaAccountInfo","getAccountByLocalId","localId","localAccountId","getAccountByUsername","userName","username","getAllAccounts","handleRedirectPromise","hash","loginPopup","loginRedirect","logout","logoutRequest","logoutRedirect","logoutPopup","ssoSilent","getTokenCache","setLogger","warning","initializeWrapperLibrary","sku","version","setNavigationClient","navigationClient","getConfiguration","isBrowserEnv","getBrowserCrypto","getPerformanceClient","getRedirectResponse","preflightBrowserEnvironmentCheck","interactionType","setInteractionInProgress","clearCache","hydrateCache"],"sources":["D:\\react-typescript\\intelli-gui\\node_modules\\@azure\\msal-browser\\src\\controllers\\NestedAppAuthController.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    CommonAuthorizationUrlRequest,\n    CommonSilentFlowRequest,\n    PerformanceCallbackFunction,\n    AccountInfo,\n    Logger,\n    ICrypto,\n    IPerformanceClient,\n    DEFAULT_CRYPTO_IMPLEMENTATION,\n    PerformanceEvents,\n    AccountFilter,\n    TimeUtils,\n} from \"@azure/msal-common\";\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { ApiId, WrapperSKU, InteractionType } from \"../utils/BrowserConstants\";\nimport { IController } from \"./IController\";\nimport { TeamsAppOperatingContext } from \"../operatingcontext/TeamsAppOperatingContext\";\nimport { IBridgeProxy } from \"../naa/IBridgeProxy\";\nimport { CryptoOps } from \"../crypto/CryptoOps\";\nimport { NestedAppAuthAdapter } from \"../naa/mapping/NestedAppAuthAdapter\";\nimport { NestedAppAuthError } from \"../error/NestedAppAuthError\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { EventType } from \"../event/EventType\";\nimport { EventCallbackFunction, EventError } from \"../event/EventMessage\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\n\nexport class NestedAppAuthController implements IController {\n    // OperatingContext\n    protected readonly operatingContext: TeamsAppOperatingContext;\n\n    // BridgeProxy\n    protected readonly bridgeProxy: IBridgeProxy;\n\n    // Crypto interface implementation\n    protected readonly browserCrypto: ICrypto;\n\n    // Input configuration by developer/user\n    protected readonly config: BrowserConfiguration;\n\n    // Logger\n    protected logger: Logger;\n\n    // Performance telemetry client\n    protected readonly performanceClient: IPerformanceClient;\n\n    // EventHandler\n    protected readonly eventHandler: EventHandler;\n\n    // NestedAppAuthAdapter\n    protected readonly nestedAppAuthAdapter: NestedAppAuthAdapter;\n\n    constructor(operatingContext: TeamsAppOperatingContext) {\n        this.operatingContext = operatingContext;\n        const proxy = this.operatingContext.getBridgeProxy();\n        if (proxy !== undefined) {\n            this.bridgeProxy = proxy;\n        } else {\n            throw new Error(\"unexpected: bridgeProxy is undefined\");\n        }\n\n        // Set the configuration.\n        this.config = operatingContext.getConfig();\n\n        // Initialize logger\n        this.logger = this.operatingContext.getLogger();\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n\n        // Initialize the crypto class.\n        this.browserCrypto = operatingContext.isBrowserEnvironment()\n            ? new CryptoOps(this.logger, this.performanceClient)\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\n\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n\n        this.nestedAppAuthAdapter = new NestedAppAuthAdapter(\n            this.config.auth.clientId,\n            this.config.auth.clientCapabilities,\n            this.browserCrypto,\n            this.logger\n        );\n    }\n    getBrowserStorage(): BrowserCacheManager {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n\n    getEventHandler(): EventHandler {\n        return this.eventHandler;\n    }\n\n    static async createController(\n        operatingContext: TeamsAppOperatingContext\n    ): Promise<IController> {\n        const controller = new NestedAppAuthController(operatingContext);\n        return Promise.resolve(controller);\n    }\n\n    initialize(): Promise<void> {\n        // do nothing not required by this controller\n        return Promise.resolve();\n    }\n\n    private async acquireTokenInteractive(\n        request: PopupRequest | RedirectRequest\n    ): Promise<AuthenticationResult> {\n        this.eventHandler.emitEvent(\n            EventType.ACQUIRE_TOKEN_START,\n            InteractionType.Popup,\n            request\n        );\n\n        const atPopupMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenPopup,\n            request.correlationId\n        );\n\n        atPopupMeasurement?.add({ nestedAppAuthRequest: true });\n\n        try {\n            const naaRequest =\n                this.nestedAppAuthAdapter.toNaaTokenRequest(request);\n            const reqTimestamp = TimeUtils.nowSeconds();\n            const response = await this.bridgeProxy.getTokenInteractive(\n                naaRequest\n            );\n            const result: AuthenticationResult =\n                this.nestedAppAuthAdapter.fromNaaTokenResponse(\n                    naaRequest,\n                    response,\n                    reqTimestamp\n                );\n\n            this.operatingContext.setActiveAccount(result.account);\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_SUCCESS,\n                InteractionType.Popup,\n                result\n            );\n\n            atPopupMeasurement.add({\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n\n            atPopupMeasurement.end({\n                success: true,\n                requestId: result.requestId,\n            });\n\n            return result;\n        } catch (e) {\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_FAILURE,\n                InteractionType.Popup,\n                null,\n                e as EventError\n            );\n\n            atPopupMeasurement.end({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n            });\n\n            throw error;\n        }\n    }\n\n    private async acquireTokenSilentInternal(\n        request: SilentRequest\n    ): Promise<AuthenticationResult> {\n        this.eventHandler.emitEvent(\n            EventType.ACQUIRE_TOKEN_START,\n            InteractionType.Silent,\n            request\n        );\n\n        const ssoSilentMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.SsoSilent,\n            request.correlationId\n        );\n\n        ssoSilentMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n\n        ssoSilentMeasurement?.add({\n            nestedAppAuthRequest: true,\n        });\n\n        try {\n            const naaRequest =\n                this.nestedAppAuthAdapter.toNaaTokenRequest(request);\n            const reqTimestamp = TimeUtils.nowSeconds();\n            const response = await this.bridgeProxy.getTokenSilent(naaRequest);\n\n            const result: AuthenticationResult =\n                this.nestedAppAuthAdapter.fromNaaTokenResponse(\n                    naaRequest,\n                    response,\n                    reqTimestamp\n                );\n\n            this.operatingContext.setActiveAccount(result.account);\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_SUCCESS,\n                InteractionType.Silent,\n                result\n            );\n            ssoSilentMeasurement?.add({\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n            ssoSilentMeasurement?.end({\n                success: true,\n                requestId: result.requestId,\n            });\n            return result;\n        } catch (e) {\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_FAILURE,\n                InteractionType.Silent,\n                null,\n                e as EventError\n            );\n            ssoSilentMeasurement?.end({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false,\n            });\n            throw error;\n        }\n    }\n\n    async acquireTokenPopup(\n        request: PopupRequest\n    ): Promise<AuthenticationResult> {\n        return this.acquireTokenInteractive(request);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n\n    async acquireTokenSilent(\n        silentRequest: SilentRequest\n    ): Promise<AuthenticationResult> {\n        return this.acquireTokenSilentInternal(silentRequest);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    acquireTokenByCode(\n        request: AuthorizationCodeRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n    ): Promise<AuthenticationResult> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    acquireTokenNative(\n        request: // eslint-disable-line @typescript-eslint/no-unused-vars\n        | SilentRequest\n            | Partial<\n                  Omit<\n                      CommonAuthorizationUrlRequest,\n                      | \"requestedClaimsHash\"\n                      | \"responseMode\"\n                      | \"codeChallenge\"\n                      | \"codeChallengeMethod\"\n                      | \"nativeBroker\"\n                  >\n              >\n            | PopupRequest,\n        apiId: ApiId, // eslint-disable-line @typescript-eslint/no-unused-vars\n        accountId?: string | undefined // eslint-disable-line @typescript-eslint/no-unused-vars\n    ): Promise<AuthenticationResult> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    acquireTokenByRefreshToken(\n        commonRequest: CommonSilentFlowRequest, // eslint-disable-line @typescript-eslint/no-unused-vars\n        silentRequest: SilentRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n    ): Promise<AuthenticationResult> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        return this.eventHandler.addEventCallback(callback);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removePerformanceCallback(callbackId: string): boolean {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    enableAccountStorageEvents(): void {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    disableAccountStorageEvents(): void {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getAccount(accountFilter: AccountFilter): AccountInfo | null {\n        throw NestedAppAuthError.createUnsupportedError();\n        // TODO: Look at standard implementation\n    }\n\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.homeAccountId === homeAccountId) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(\n                    currentAccount\n                );\n            } else {\n                return null;\n            }\n        } else {\n            return null;\n        }\n    }\n\n    getAccountByLocalId(localId: string): AccountInfo | null {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.localAccountId === localId) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(\n                    currentAccount\n                );\n            } else {\n                return null;\n            }\n        } else {\n            return null;\n        }\n    }\n\n    getAccountByUsername(userName: string): AccountInfo | null {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            if (currentAccount.username === userName) {\n                return this.nestedAppAuthAdapter.fromNaaAccountInfo(\n                    currentAccount\n                );\n            } else {\n                return null;\n            }\n        } else {\n            return null;\n        }\n    }\n    getAllAccounts(): AccountInfo[] {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            return [\n                this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount),\n            ];\n        } else {\n            return [];\n        }\n    }\n    handleRedirectPromise(\n        hash?: string | undefined // eslint-disable-line @typescript-eslint/no-unused-vars\n    ): Promise<AuthenticationResult | null> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    loginPopup(\n        request?: PopupRequest | undefined // eslint-disable-line @typescript-eslint/no-unused-vars\n    ): Promise<AuthenticationResult> {\n        if (request !== undefined) {\n            return this.acquireTokenInteractive(request);\n        } else {\n            throw NestedAppAuthError.createUnsupportedError();\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    loginRedirect(request?: RedirectRequest | undefined): Promise<void> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    logout(logoutRequest?: EndSessionRequest | undefined): Promise<void> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    logoutRedirect(\n        logoutRequest?: EndSessionRequest | undefined // eslint-disable-line @typescript-eslint/no-unused-vars\n    ): Promise<void> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    logoutPopup(\n        logoutRequest?: EndSessionPopupRequest | undefined // eslint-disable-line @typescript-eslint/no-unused-vars\n    ): Promise<void> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    ssoSilent(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        request: Partial<\n            Omit<\n                CommonAuthorizationUrlRequest,\n                | \"requestedClaimsHash\"\n                | \"responseMode\"\n                | \"codeChallenge\"\n                | \"codeChallengeMethod\"\n                | \"nativeBroker\"\n            >\n        >\n    ): Promise<AuthenticationResult> {\n        return this.acquireTokenSilentInternal(request as SilentRequest);\n    }\n    getTokenCache(): ITokenCache {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    public getLogger(): Logger {\n        return this.logger;\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.logger = logger;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setActiveAccount(account: AccountInfo | null): void {\n        /*\n         * StandardController uses this to allow the developer to set the active account\n         * in the nested app auth scenario the active account is controlled by the app hosting the nested app\n         */\n        this.logger.warning(\"nestedAppAuth does not support setActiveAccount\");\n        return;\n    }\n    getActiveAccount(): AccountInfo | null {\n        const currentAccount = this.operatingContext.getActiveAccount();\n        if (currentAccount !== undefined) {\n            return this.nestedAppAuthAdapter.fromNaaAccountInfo(currentAccount);\n        } else {\n            return null;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        /*\n         * Standard controller uses this to set the sku and version of the wrapper library in the storage\n         * we do nothing here\n         */\n        return;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.logger.warning(\n            \"setNavigationClient is not supported in nested app auth\"\n        );\n    }\n    getConfiguration(): BrowserConfiguration {\n        return this.config;\n    }\n    isBrowserEnv(): boolean {\n        return this.operatingContext.isBrowserEnvironment();\n    }\n    getBrowserCrypto(): ICrypto {\n        return this.browserCrypto;\n    }\n    getPerformanceClient(): IPerformanceClient {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n\n    getRedirectResponse(): Map<string, Promise<AuthenticationResult | null>> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n    preflightBrowserEnvironmentCheck(\n        interactionType: InteractionType, // eslint-disable-line @typescript-eslint/no-unused-vars\n        setInteractionInProgress?: boolean | undefined // eslint-disable-line @typescript-eslint/no-unused-vars\n    ): void {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async clearCache(logoutRequest?: ClearCacheRequest): Promise<void> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async hydrateCache(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        result: AuthenticationResult,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        throw NestedAppAuthError.createUnsupportedError();\n    }\n}\n"],"mappings":";;;;;;;;;;;AAAA;;;AAGG;MAuCUA,uBAAuB;EAyBhCC,YAAYC,gBAA0C;IAClD,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;IACxC,MAAMC,KAAK,GAAG,IAAI,CAACD,gBAAgB,CAACE,cAAc,EAAE;IACpD,IAAID,KAAK,KAAKE,SAAS,EAAE;MACrB,IAAI,CAACC,WAAW,GAAGH,KAAK;IAC3B,OAAM;MACH,MAAM,IAAII,KAAK,CAAC,sCAAsC,CAAC;IAC1D;;IAGD,IAAI,CAACC,MAAM,GAAGN,gBAAgB,CAACO,SAAS,EAAE;;IAG1C,IAAI,CAACC,MAAM,GAAG,IAAI,CAACR,gBAAgB,CAACS,SAAS,EAAE;;IAE/C,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACJ,MAAM,CAACK,SAAS,CAACC,MAAM;;IAGrD,IAAI,CAACC,aAAa,GAAGb,gBAAgB,CAACc,oBAAoB,EAAE,GACtD,IAAIC,SAAS,CAAC,IAAI,CAACP,MAAM,EAAE,IAAI,CAACE,iBAAiB,CAAC,GAClDM,6BAA6B;IAEnC,IAAI,CAACC,YAAY,GAAG,IAAIC,YAAY,CAAC,IAAI,CAACV,MAAM,EAAE,IAAI,CAACK,aAAa,CAAC;IAErE,IAAI,CAACM,oBAAoB,GAAG,IAAIC,oBAAoB,CAChD,IAAI,CAACd,MAAM,CAACe,IAAI,CAACC,QAAQ,EACzB,IAAI,CAAChB,MAAM,CAACe,IAAI,CAACE,kBAAkB,EACnC,IAAI,CAACV,aAAa,EAClB,IAAI,CAACL,MAAM,CACd;;EAELgB,iBAAiBA,CAAA;IACb,MAAMC,kBAAkB,CAACC,sBAAsB,EAAE;;EAGrDC,eAAeA,CAAA;IACX,OAAO,IAAI,CAACV,YAAY;;EAG5B,aAAaW,gBAAgBA,CACzB5B,gBAA0C;IAE1C,MAAM6B,UAAU,GAAG,IAAI/B,uBAAuB,CAACE,gBAAgB,CAAC;IAChE,OAAO8B,OAAO,CAACC,OAAO,CAACF,UAAU,CAAC;;EAGtCG,UAAUA,CAAA;;IAEN,OAAOF,OAAO,CAACC,OAAO,EAAE;;EAGpB,MAAME,uBAAuBA,CACjCC,OAAuC;IAEvC,IAAI,CAACjB,YAAY,CAACkB,SAAS,CACvBC,SAAS,CAACC,mBAAmB,EAC7BC,eAAe,CAACC,KAAK,EACrBL,OAAO,CACV;IAED,MAAMM,kBAAkB,GAAG,IAAI,CAAC9B,iBAAiB,CAAC+B,gBAAgB,CAC9DC,iBAAiB,CAACC,iBAAiB,EACnCT,OAAO,CAACU,aAAa,CACxB;IAEDJ,kBAAkB,EAAEK,GAAG,CAAC;MAAEC,oBAAoB,EAAE;IAAI,CAAE,CAAC;IAEvD,IAAI;MACA,MAAMC,UAAU,GACZ,IAAI,CAAC5B,oBAAoB,CAAC6B,iBAAiB,CAACd,OAAO,CAAC;MACxD,MAAMe,YAAY,GAAGC,SAAS,CAACC,UAAU,EAAE;MAC3C,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAAChD,WAAW,CAACiD,mBAAmB,CACvDN,UAAU,CACb;MACD,MAAMO,MAAM,GACR,IAAI,CAACnC,oBAAoB,CAACoC,oBAAoB,CAC1CR,UAAU,EACVK,QAAQ,EACRH,YAAY,CACf;MAEL,IAAI,CAACjD,gBAAgB,CAACwD,gBAAgB,CAACF,MAAM,CAACG,OAAO,CAAC;MACtD,IAAI,CAACxC,YAAY,CAACkB,SAAS,CACvBC,SAAS,CAACsB,qBAAqB,EAC/BpB,eAAe,CAACC,KAAK,EACrBe,MAAM,CACT;MAEDd,kBAAkB,CAACK,GAAG,CAAC;QACnBc,eAAe,EAAEL,MAAM,CAACM,WAAW,CAACC,MAAM;QAC1CC,WAAW,EAAER,MAAM,CAACS,OAAO,CAACF;MAC/B,EAAC;MAEFrB,kBAAkB,CAACwB,GAAG,CAAC;QACnBC,OAAO,EAAE,IAAI;QACbC,SAAS,EAAEZ,MAAM,CAACY;MACrB,EAAC;MAEF,OAAOZ,MAAM;IAChB,EAAC,OAAOa,CAAC,EAAE;MACR,MAAMC,KAAK,GAAG,IAAI,CAACjD,oBAAoB,CAACkD,eAAe,CAACF,CAAC,CAAC;MAC1D,IAAI,CAAClD,YAAY,CAACkB,SAAS,CACvBC,SAAS,CAACkC,qBAAqB,EAC/BhC,eAAe,CAACC,KAAK,EACrB,IAAI,EACJ4B,CAAe,CAClB;MAED3B,kBAAkB,CAACwB,GAAG,CAAC;QACnBO,SAAS,EAAEH,KAAK,CAACG,SAAS;QAC1BC,YAAY,EAAEJ,KAAK,CAACK,QAAQ;QAC5BR,OAAO,EAAE;MACZ,EAAC;MAEF,MAAMG,KAAK;IACd;;EAGG,MAAMM,0BAA0BA,CACpCxC,OAAsB;IAEtB,IAAI,CAACjB,YAAY,CAACkB,SAAS,CACvBC,SAAS,CAACC,mBAAmB,EAC7BC,eAAe,CAACqC,MAAM,EACtBzC,OAAO,CACV;IAED,MAAM0C,oBAAoB,GAAG,IAAI,CAAClE,iBAAiB,CAAC+B,gBAAgB,CAChEC,iBAAiB,CAACmC,SAAS,EAC3B3C,OAAO,CAACU,aAAa,CACxB;IAEDgC,oBAAoB,EAAEE,SAAS,CAAC;MAC5BC,qBAAqB,EAAE;IAC1B,EAAC;IAEFH,oBAAoB,EAAE/B,GAAG,CAAC;MACtBC,oBAAoB,EAAE;IACzB,EAAC;IAEF,IAAI;MACA,MAAMC,UAAU,GACZ,IAAI,CAAC5B,oBAAoB,CAAC6B,iBAAiB,CAACd,OAAO,CAAC;MACxD,MAAMe,YAAY,GAAGC,SAAS,CAACC,UAAU,EAAE;MAC3C,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAAChD,WAAW,CAAC4E,cAAc,CAACjC,UAAU,CAAC;MAElE,MAAMO,MAAM,GACR,IAAI,CAACnC,oBAAoB,CAACoC,oBAAoB,CAC1CR,UAAU,EACVK,QAAQ,EACRH,YAAY,CACf;MAEL,IAAI,CAACjD,gBAAgB,CAACwD,gBAAgB,CAACF,MAAM,CAACG,OAAO,CAAC;MACtD,IAAI,CAACxC,YAAY,CAACkB,SAAS,CACvBC,SAAS,CAACsB,qBAAqB,EAC/BpB,eAAe,CAACqC,MAAM,EACtBrB,MAAM,CACT;MACDsB,oBAAoB,EAAE/B,GAAG,CAAC;QACtBc,eAAe,EAAEL,MAAM,CAACM,WAAW,CAACC,MAAM;QAC1CC,WAAW,EAAER,MAAM,CAACS,OAAO,CAACF;MAC/B,EAAC;MACFe,oBAAoB,EAAEZ,GAAG,CAAC;QACtBC,OAAO,EAAE,IAAI;QACbC,SAAS,EAAEZ,MAAM,CAACY;MACrB,EAAC;MACF,OAAOZ,MAAM;IAChB,EAAC,OAAOa,CAAC,EAAE;MACR,MAAMC,KAAK,GAAG,IAAI,CAACjD,oBAAoB,CAACkD,eAAe,CAACF,CAAC,CAAC;MAC1D,IAAI,CAAClD,YAAY,CAACkB,SAAS,CACvBC,SAAS,CAACkC,qBAAqB,EAC/BhC,eAAe,CAACqC,MAAM,EACtB,IAAI,EACJR,CAAe,CAClB;MACDS,oBAAoB,EAAEZ,GAAG,CAAC;QACtBO,SAAS,EAAEH,KAAK,CAACG,SAAS;QAC1BC,YAAY,EAAEJ,KAAK,CAACK,QAAQ;QAC5BR,OAAO,EAAE;MACZ,EAAC;MACF,MAAMG,KAAK;IACd;;EAGL,MAAMa,iBAAiBA,CACnB/C,OAAqB;IAErB,OAAO,IAAI,CAACD,uBAAuB,CAACC,OAAO,CAAC;;;EAGhDgD,oBAAoBA,CAAChD,OAAwB;IACzC,MAAMT,kBAAkB,CAACC,sBAAsB,EAAE;;EAGrD,MAAMyD,kBAAkBA,CACpBC,aAA4B;IAE5B,OAAO,IAAI,CAACV,0BAA0B,CAACU,aAAa,CAAC;;;EAIzDC,kBAAkBA,CACdnD,OAAiC;EAAA,E;IAEjC,MAAMT,kBAAkB,CAACC,sBAAsB,EAAE;;EAErD4D,kBAAkBA,CACdpD,OAYkB,EAClBqD,KAAY;EAAA;EACZC,SAA8B;EAAA,E;IAE9B,MAAM/D,kBAAkB,CAACC,sBAAsB,EAAE;;EAErD+D,0BAA0BA,CACtBC,aAAsC;EAAA;EACtCN,aAA4B;EAAA,E;IAE5B,MAAM3D,kBAAkB,CAACC,sBAAsB,EAAE;;EAGrD;;;AAGG;EACHiE,gBAAgBA,CAACC,QAA+B;IAC5C,OAAO,IAAI,CAAC3E,YAAY,CAAC0E,gBAAgB,CAACC,QAAQ,CAAC;;EAGvD;;;AAGG;EACHC,mBAAmBA,CAACC,UAAkB;IAClC,IAAI,CAAC7E,YAAY,CAAC4E,mBAAmB,CAACC,UAAU,CAAC;;;EAIrDC,sBAAsBA,CAACH,QAAqC;IACxD,MAAMnE,kBAAkB,CAACC,sBAAsB,EAAE;;;EAGrDsE,yBAAyBA,CAACF,UAAkB;IACxC,MAAMrE,kBAAkB,CAACC,sBAAsB,EAAE;;EAErDuE,0BAA0BA,CAAA;IACtB,MAAMxE,kBAAkB,CAACC,sBAAsB,EAAE;;EAErDwE,2BAA2BA,CAAA;IACvB,MAAMzE,kBAAkB,CAACC,sBAAsB,EAAE;;;EAIrDyE,UAAUA,CAACC,aAA4B;IACnC,MAAM3E,kBAAkB,CAACC,sBAAsB,EAAE;;;EAIrD2E,kBAAkBA,CAACC,aAAqB;IACpC,MAAMC,cAAc,GAAG,IAAI,CAACvG,gBAAgB,CAACwG,gBAAgB,EAAE;IAC/D,IAAID,cAAc,KAAKpG,SAAS,EAAE;MAC9B,IAAIoG,cAAc,CAACD,aAAa,KAAKA,aAAa,EAAE;QAChD,OAAO,IAAI,CAACnF,oBAAoB,CAACsF,kBAAkB,CAC/CF,cAAc,CACjB;MACJ,OAAM;QACH,OAAO,IAAI;MACd;IACJ,OAAM;MACH,OAAO,IAAI;IACd;;EAGLG,mBAAmBA,CAACC,OAAe;IAC/B,MAAMJ,cAAc,GAAG,IAAI,CAACvG,gBAAgB,CAACwG,gBAAgB,EAAE;IAC/D,IAAID,cAAc,KAAKpG,SAAS,EAAE;MAC9B,IAAIoG,cAAc,CAACK,cAAc,KAAKD,OAAO,EAAE;QAC3C,OAAO,IAAI,CAACxF,oBAAoB,CAACsF,kBAAkB,CAC/CF,cAAc,CACjB;MACJ,OAAM;QACH,OAAO,IAAI;MACd;IACJ,OAAM;MACH,OAAO,IAAI;IACd;;EAGLM,oBAAoBA,CAACC,QAAgB;IACjC,MAAMP,cAAc,GAAG,IAAI,CAACvG,gBAAgB,CAACwG,gBAAgB,EAAE;IAC/D,IAAID,cAAc,KAAKpG,SAAS,EAAE;MAC9B,IAAIoG,cAAc,CAACQ,QAAQ,KAAKD,QAAQ,EAAE;QACtC,OAAO,IAAI,CAAC3F,oBAAoB,CAACsF,kBAAkB,CAC/CF,cAAc,CACjB;MACJ,OAAM;QACH,OAAO,IAAI;MACd;IACJ,OAAM;MACH,OAAO,IAAI;IACd;;EAELS,cAAcA,CAAA;IACV,MAAMT,cAAc,GAAG,IAAI,CAACvG,gBAAgB,CAACwG,gBAAgB,EAAE;IAC/D,IAAID,cAAc,KAAKpG,SAAS,EAAE;MAC9B,OAAO,CACH,IAAI,CAACgB,oBAAoB,CAACsF,kBAAkB,CAACF,cAAc,CAAC,CAC/D;IACJ,OAAM;MACH,OAAO,EAAE;IACZ;;EAELU,qBAAqBA,CACjBC,IAAyB;EAAA,E;IAEzB,MAAMzF,kBAAkB,CAACC,sBAAsB,EAAE;;EAErDyF,UAAUA,CACNjF,OAAkC;EAAA,E;IAElC,IAAIA,OAAO,KAAK/B,SAAS,EAAE;MACvB,OAAO,IAAI,CAAC8B,uBAAuB,CAACC,OAAO,CAAC;IAC/C,OAAM;MACH,MAAMT,kBAAkB,CAACC,sBAAsB,EAAE;IACpD;;;EAGL0F,aAAaA,CAAClF,OAAqC;IAC/C,MAAMT,kBAAkB,CAACC,sBAAsB,EAAE;;;EAGrD2F,MAAMA,CAACC,aAA6C;IAChD,MAAM7F,kBAAkB,CAACC,sBAAsB,EAAE;;EAErD6F,cAAcA,CACVD,aAA6C;EAAA,E;IAE7C,MAAM7F,kBAAkB,CAACC,sBAAsB,EAAE;;EAErD8F,WAAWA,CACPF,aAAkD;EAAA,E;IAElD,MAAM7F,kBAAkB,CAACC,sBAAsB,EAAE;;EAErD+F,SAASA;;EAELvF,OASC;IAED,OAAO,IAAI,CAACwC,0BAA0B,CAACxC,OAAwB,CAAC;;EAEpEwF,aAAaA,CAAA;IACT,MAAMjG,kBAAkB,CAACC,sBAAsB,EAAE;;EAGrD;;AAEG;EACIjB,SAASA,CAAA;IACZ,OAAO,IAAI,CAACD,MAAM;;EAGtB;;;AAGG;EACHmH,SAASA,CAACnH,MAAc;IACpB,IAAI,CAACA,MAAM,GAAGA,MAAM;;;EAIxBgD,gBAAgBA,CAACC,OAA2B;IACxC;;;AAGG;IACH,IAAI,CAACjD,MAAM,CAACoH,OAAO,CAAC,iDAAiD,CAAC;IACtE;;EAEJpB,gBAAgBA,CAAA;IACZ,MAAMD,cAAc,GAAG,IAAI,CAACvG,gBAAgB,CAACwG,gBAAgB,EAAE;IAC/D,IAAID,cAAc,KAAKpG,SAAS,EAAE;MAC9B,OAAO,IAAI,CAACgB,oBAAoB,CAACsF,kBAAkB,CAACF,cAAc,CAAC;IACtE,OAAM;MACH,OAAO,IAAI;IACd;;;EAGLsB,wBAAwBA,CAACC,GAAe,EAAEC,OAAe;IACrD;;;AAGG;IACH;;;EAGJC,mBAAmBA,CAACC,gBAAmC;IACnD,IAAI,CAACzH,MAAM,CAACoH,OAAO,CACf,yDAAyD,CAC5D;;EAELM,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAAC5H,MAAM;;EAEtB6H,YAAYA,CAAA;IACR,OAAO,IAAI,CAACnI,gBAAgB,CAACc,oBAAoB,EAAE;;EAEvDsH,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACvH,aAAa;;EAE7BwH,oBAAoBA,CAAA;IAChB,MAAM5G,kBAAkB,CAACC,sBAAsB,EAAE;;EAGrD4G,mBAAmBA,CAAA;IACf,MAAM7G,kBAAkB,CAACC,sBAAsB,EAAE;;EAErD6G,gCAAgCA,CAC5BC,eAAgC;EAAA;EAChCC,wBAA8C;EAAA,E;IAE9C,MAAMhH,kBAAkB,CAACC,sBAAsB,EAAE;;;EAIrD,MAAMgH,UAAUA,CAACpB,aAAiC;IAC9C,MAAM7F,kBAAkB,CAACC,sBAAsB,EAAE;;;EAIrD,MAAMiH,YAAYA;;EAEdrF,MAA4B;;EAE5BpB,OAIkB;IAElB,MAAMT,kBAAkB,CAACC,sBAAsB,EAAE;;AAExD"},"metadata":{},"sourceType":"module","externalDependencies":[]}