{"ast":null,"code":"ace.define(\"ace/mode/json_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n  var JsonHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"variable\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n      }, {\n        token: \"string\",\n        // single line\n        regex: '\"',\n        next: \"string\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        token: \"text\",\n        // single quoted strings are not allowed\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"comment\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\/\\\\/.*$\"\n      }, {\n        token: \"comment.start\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"string\": [{\n        token: \"constant.language.escape\",\n        regex: /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"comment\": [{\n        token: \"comment.end\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n  };\n  oop.inherits(JsonHighlightRules, TextHighlightRules);\n  exports.JsonHighlightRules = JsonHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Range = acequire(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/json\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/json_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/cstyle\", \"ace/worker/worker_client\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var HighlightRules = acequire(\"./json_highlight_rules\").JsonHighlightRules;\n  var MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\n  var CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n  var WorkerClient = acequire(\"../worker/worker_client\").WorkerClient;\n  var Mode = function () {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], require(\"../worker/json\"), \"JsonWorker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"annotate\", function (e) {\n        session.setAnnotations(e.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n    this.$id = \"ace/mode/json\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});","map":{"version":3,"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","JsonHighlightRules","$rules","token","regex","next","defaultToken","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","HighlightRules","CstyleBehaviour","CStyleFoldMode","WorkerClient","$outdent","$behaviour","foldingRules","getNextLineIndent","state","tab","createWorker","worker","require","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id"],"sources":["D:/react-typescript/intelli-gui/node_modules/brace/mode/json.js"],"sourcesContent":["ace.define(\"ace/mode/json_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JsonHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"variable\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n            }, {\n                token : \"string\", // single line\n                regex : '\"',\n                next  : \"string\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : \"text\", // single quoted strings are not allowed\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"comment\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\/.*$\"\n            }, {\n                token : \"comment.start\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\*\",\n                next  : \"comment\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"string\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"start\"\n            }, {\n                defaultToken : \"string\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment.end\", // comments are not allowed, but who cares?\n                regex : \"\\\\*\\\\/\",\n                next  : \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ]\n    };\n    \n};\n\noop.inherits(JsonHighlightRules, TextHighlightRules);\n\nexports.JsonHighlightRules = JsonHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/json\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/json_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\",\"ace/worker/worker_client\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar HighlightRules = acequire(\"./json_highlight_rules\").JsonHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\nvar WorkerClient = acequire(\"../worker/worker_client\").WorkerClient;\n\nvar Mode = function() {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], require(\"../worker/json\"), \"JsonWorker\");\n        worker.attachToDocument(session.getDocument());\n\n        worker.on(\"annotate\", function(e) {\n            session.setAnnotations(e.data);\n        });\n\n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n\n        return worker;\n    };\n\n\n    this.$id = \"ace/mode/json\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}