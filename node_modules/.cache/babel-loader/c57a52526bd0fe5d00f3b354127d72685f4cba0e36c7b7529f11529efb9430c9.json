{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  openapi: \"3.0.0\",\n  info: {\n    title: \"Swagger Petstore\",\n    version: \"1.0.0\",\n    contact: {},\n    license: {}\n  },\n  paths: {},\n  externalDocs: {},\n  security: [],\n  servers: [],\n  components: {\n    links: {},\n    callbacks: {},\n    schemas: {}\n  }\n};\nconst uploadSlice = createSlice({\n  name: \"upload\",\n  initialState,\n  reducers: {\n    uploadFile: (state, action) => {\n      return {\n        ...state,\n        ...action.payload\n      };\n    },\n    updateData: (state, action) => {\n      const {\n        key,\n        data: payloadData\n      } = action.payload;\n      return {\n        ...state,\n        [key]: payloadData\n      };\n    }\n  }\n});\nexport const {\n  uploadFile,\n  updateData\n} = uploadSlice.actions;\nexport const selectDetails = state => state.details.value;\nexport default uploadSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","openapi","info","title","version","contact","license","paths","externalDocs","security","servers","components","links","callbacks","schemas","uploadSlice","name","reducers","uploadFile","state","action","payload","updateData","key","data","payloadData","actions","selectDetails","details","value","reducer"],"sources":["D:/react-typescript/intelli-gui/src/store/reducers/uploadSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { JsonDetailsObject } from \"../../utils/constant/types\";\r\n\r\ntype JsonDetails = Record<string,any>;\r\n\r\nconst initialState: JsonDetails = {\r\n    \r\n      openapi: \"3.0.0\",\r\n      info: {\r\n        title: \"Swagger Petstore\",\r\n        version: \"1.0.0\",\r\n        contact: {},\r\n        license: {},\r\n      },\r\n      paths: {},\r\n      externalDocs: {},\r\n      security: [],\r\n      servers: [],\r\n      components: {\r\n        links: {},\r\n        callbacks: {},\r\n        schemas: {},\r\n      },\r\n}\r\n\r\nconst uploadSlice = createSlice({\r\n  name: \"upload\",\r\n  initialState,\r\n  reducers: {\r\n    uploadFile: (state, action: PayloadAction<JsonDetails>) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    updateData: (state, action: PayloadAction<JsonDetailsObject>) => {\r\n      const { key, data: payloadData } = action.payload;\r\n      return {\r\n          ...state,\r\n          [key]: payloadData,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport const { uploadFile, updateData } = uploadSlice.actions;\r\nexport const selectDetails = (state: { details: JsonDetails }) =>\r\n  state.details.value;\r\nexport default uploadSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAK7D,MAAMC,YAAyB,GAAG;EAE5BC,OAAO,EAAE,OAAO;EAChBC,IAAI,EAAE;IACJC,KAAK,EAAE,kBAAkB;IACzBC,OAAO,EAAE,OAAO;IAChBC,OAAO,EAAE,CAAC,CAAC;IACXC,OAAO,EAAE,CAAC;EACZ,CAAC;EACDC,KAAK,EAAE,CAAC,CAAC;EACTC,YAAY,EAAE,CAAC,CAAC;EAChBC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,EAAE;EACXC,UAAU,EAAE;IACVC,KAAK,EAAE,CAAC,CAAC;IACTC,SAAS,EAAE,CAAC,CAAC;IACbC,OAAO,EAAE,CAAC;EACZ;AACN,CAAC;AAED,MAAMC,WAAW,GAAGhB,WAAW,CAAC;EAC9BiB,IAAI,EAAE,QAAQ;EACdhB,YAAY;EACZiB,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAkC,KAAK;MACzD,OAAO;QACL,GAAGD,KAAK;QACR,GAAGC,MAAM,CAACC;MACZ,CAAC;IACH,CAAC;IACDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAwC,KAAK;MAC/D,MAAM;QAAEG,GAAG;QAAEC,IAAI,EAAEC;MAAY,CAAC,GAAGL,MAAM,CAACC,OAAO;MACjD,OAAO;QACH,GAAGF,KAAK;QACR,CAACI,GAAG,GAAGE;MACX,CAAC;IACH;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEP,UAAU;EAAEI;AAAW,CAAC,GAAGP,WAAW,CAACW,OAAO;AAC7D,OAAO,MAAMC,aAAa,GAAIR,KAA+B,IAC3DA,KAAK,CAACS,OAAO,CAACC,KAAK;AACrB,eAAed,WAAW,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}