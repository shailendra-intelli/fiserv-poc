{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\common\\\\LoginGoogle.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\nimport { login } from \"../../store/reducers/authSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginGoogle = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: `${process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID}`,\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: credentialResponse => {\n        if (credentialResponse.credential) {\n          dispatch(login({\n            type: \"google\",\n            credential: credentialResponse.credential\n          }));\n          navigate(\"/dashboard\");\n        }\n      },\n      onError: () => {\n        console.log(\"Login Failed\");\n      },\n      useOneTap: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginGoogle, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = LoginGoogle;\nexport default LoginGoogle;\nvar _c;\n$RefreshReg$(_c, \"LoginGoogle\");","map":{"version":3,"names":["React","GoogleOAuthProvider","GoogleLogin","login","useNavigate","useDispatch","jsxDEV","_jsxDEV","LoginGoogle","_s","navigate","dispatch","clientId","process","env","REACT_APP_GOOGLE_OAUTH_CLIENT_ID","children","onSuccess","credentialResponse","credential","type","onError","console","log","useOneTap","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/common/LoginGoogle.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\r\nimport { login } from \"../../store/reducers/authSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst LoginGoogle = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <GoogleOAuthProvider\r\n      clientId={`${process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID}`}\r\n    >\r\n      <GoogleLogin\r\n        onSuccess={(credentialResponse) => {\r\n          if (credentialResponse.credential) {\r\n            dispatch(\r\n              login({\r\n                type: \"google\",\r\n                credential: credentialResponse.credential,\r\n              })\r\n            );\r\n            navigate(\"/dashboard\");\r\n          }\r\n        }}\r\n        onError={() => {\r\n          console.log(\"Login Failed\");\r\n        }}\r\n        useOneTap={true}\r\n      />\r\n    </GoogleOAuthProvider>\r\n  );\r\n};\r\n\r\nexport default LoginGoogle;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,qBAAqB;AACtE,SAASC,KAAK,QAAQ,gCAAgC;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,oBACEE,OAAA,CAACN,mBAAmB;IAClBW,QAAQ,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,gCAAiC,EAAE;IAAAC,QAAA,eAE5DT,OAAA,CAACL,WAAW;MACVe,SAAS,EAAGC,kBAAkB,IAAK;QACjC,IAAIA,kBAAkB,CAACC,UAAU,EAAE;UACjCR,QAAQ,CACNR,KAAK,CAAC;YACJiB,IAAI,EAAE,QAAQ;YACdD,UAAU,EAAED,kBAAkB,CAACC;UACjC,CAAC,CACH,CAAC;UACDT,QAAQ,CAAC,YAAY,CAAC;QACxB;MACF,CAAE;MACFW,OAAO,EAAEA,CAAA,KAAM;QACbC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B,CAAE;MACFC,SAAS,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAE1B,CAAC;AAACnB,EAAA,CA1BID,WAAW;EAAA,QACEJ,WAAW,EACXC,WAAW;AAAA;AAAAwB,EAAA,GAFxBrB,WAAW;AA4BjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}