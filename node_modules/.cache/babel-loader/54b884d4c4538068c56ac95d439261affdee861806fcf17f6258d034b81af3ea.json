{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass MemoryStorage {\n  constructor() {\n    this.cache = new Map();\n  }\n  getItem(key) {\n    return this.cache.get(key) || null;\n  }\n  setItem(key, value) {\n    this.cache.set(key, value);\n  }\n  removeItem(key) {\n    this.cache.delete(key);\n  }\n  getKeys() {\n    const cacheKeys = [];\n    this.cache.forEach((value, key) => {\n      cacheKeys.push(key);\n    });\n    return cacheKeys;\n  }\n  containsKey(key) {\n    return this.cache.has(key);\n  }\n  clear() {\n    this.cache.clear();\n  }\n}\nexport { MemoryStorage };","map":{"version":3,"names":["MemoryStorage","constructor","cache","Map","getItem","key","get"],"sources":["D:\\react-typescript\\intelli-gui\\node_modules\\@azure\\msal-browser\\src\\cache\\MemoryStorage.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class MemoryStorage<T> implements IWindowStorage<T> {\n    private cache: Map<string, T>;\n\n    constructor() {\n        this.cache = new Map<string, T>();\n    }\n\n    getItem(key: string): T | null {\n        return this.cache.get(key) || null;\n    }\n\n    setItem(key: string, value: T): void {\n        this.cache.set(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.cache.delete(key);\n    }\n\n    getKeys(): string[] {\n        const cacheKeys: string[] = [];\n        this.cache.forEach((value: T, key: string) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.cache.has(key);\n    }\n\n    clear(): void {\n        this.cache.clear();\n    }\n}\n"],"mappings":";;;AAKA;AAEA;;;AAOI,MAAWA,aAAW,CAAC;EAIvBC,WAAWA,CAAA,EAAE;IAIb,KAAAC,KAAc,GAAE,IAAAC,GAAA,EAAa;;EAY7BC,QAAAC,GAAW,EAAC;IAIZ,OAAa,KAAAH,KAAA,CAAAI,GAAA,CAAAD,GAAA;EAGhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}