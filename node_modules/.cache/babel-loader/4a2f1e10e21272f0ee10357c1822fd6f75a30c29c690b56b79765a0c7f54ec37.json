{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\export\\\\Export.tsx\",\n  _s = $RefreshSig$();\nimport { Button } from \"intelli-ui-components-library\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport styles from \"./export.module.scss\";\nimport { CopyIcon, DownloadIcon } from \"../../assets/icons\";\nimport { useRef, useState } from \"react\";\nimport copy from \"copy-to-clipboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Export = () => {\n  _s();\n  const state = useAppSelector(state => state);\n  const [isCopied, setIsCopied] = useState(false);\n  const textRef = useRef();\n  function downloadtoLocalFile() {\n    const jsonData = textRef.current.value;\n    const blob = new Blob([jsonData], {\n      type: \"text/json\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"openApi-data.json\";\n    link.click();\n  }\n  ;\n  function copyToClipboard() {\n    let copyText = textRef.current.value;\n    copy(copyText);\n    setIsCopied(true);\n    setTimeout(() => {\n      setIsCopied(false);\n    }, 10000);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles[\"btn-group\"]}`,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        round: \"round\",\n        color: \"success\",\n        className: styles.button1,\n        onClick: copyToClipboard,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles[\"button-icon\"],\n          children: /*#__PURE__*/_jsxDEV(CopyIcon, {\n            fill: \"#FFFFFF\",\n            width: \"20px\",\n            height: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), isCopied ? \"Copied\" : \"Copy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        round: \"round\",\n        color: \"success\",\n        className: styles.button1,\n        onClick: downloadtoLocalFile,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles[\"button-icon\"],\n          children: /*#__PURE__*/_jsxDEV(DownloadIcon, {\n            fill: \"#FFFFFF\",\n            width: \"20px\",\n            height: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \"Download\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"textarea-container\"],\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: () => {},\n        value: JSON.stringify(state.export, null, 2),\n        className: `${styles[\"text-area\"]}`,\n        name: \"Open Api Json\",\n        rows: 20,\n        ref: textRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Export, \"T0mC1E8UQ4lgOgRQj/pYUFU31R4=\", false, function () {\n  return [useAppSelector];\n});\n_c = Export;\nexport default Export;\nvar _c;\n$RefreshReg$(_c, \"Export\");","map":{"version":3,"names":["Button","useAppSelector","styles","CopyIcon","DownloadIcon","useRef","useState","copy","jsxDEV","_jsxDEV","Fragment","_Fragment","Export","_s","state","isCopied","setIsCopied","textRef","downloadtoLocalFile","jsonData","current","value","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","copyToClipboard","copyText","setTimeout","children","className","round","color","button1","onClick","fill","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onChange","JSON","stringify","export","name","rows","ref","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/export/Export.tsx"],"sourcesContent":["import { Button } from \"intelli-ui-components-library\";\r\nimport { useAppSelector } from \"../../store/hooks\";\r\nimport styles from \"./export.module.scss\";\r\nimport { CopyIcon, DownloadIcon} from \"../../assets/icons\";\r\nimport { useRef, useState } from \"react\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst Export = () => {\r\n  const state = useAppSelector((state) => state);\r\n  const [isCopied, setIsCopied] = useState(false);\r\n  const textRef = useRef();\r\n\r\n  function downloadtoLocalFile() {\r\n    const jsonData = textRef.current.value;\r\n    const blob = new Blob([jsonData], { type: \"text/json\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"openApi-data.json\";\r\n    link.click();\r\n  };\r\n  function copyToClipboard() {\r\n    let copyText = textRef.current.value;\r\n    copy(copyText);\r\n    setIsCopied(true);\r\n    setTimeout(() => {\r\n      setIsCopied(false);\r\n    }, 10000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`${styles[\"btn-group\"]}`}>\r\n        <Button\r\n          round=\"round\"\r\n          color=\"success\"\r\n          className={styles.button1}\r\n          onClick={copyToClipboard}\r\n        >\r\n          <span className={styles[\"button-icon\"]}>\r\n            <CopyIcon fill=\"#FFFFFF\" width=\"20px\" height=\"20px\" />\r\n          </span>\r\n          {isCopied ? \"Copied\" : \"Copy\"}\r\n        </Button>\r\n        <Button\r\n          round=\"round\"\r\n          color=\"success\"\r\n          className={styles.button1}\r\n          onClick={downloadtoLocalFile}\r\n        >\r\n          <span className={styles[\"button-icon\"]}>\r\n            <DownloadIcon fill=\"#FFFFFF\" width=\"20px\" height=\"20px\" />\r\n          </span>\r\n          Download\r\n        </Button>\r\n      </div>\r\n      <div className={styles[\"textarea-container\"]}>\r\n        <textarea\r\n          onChange={() => {}}\r\n          value={JSON.stringify(state.export, null, 2)}\r\n          className={`${styles[\"text-area\"]}`}\r\n          name=\"Open Api Json\"\r\n          rows={20}\r\n          ref={textRef}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Export;\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,+BAA+B;AACtD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,QAAQ,EAAEC,YAAY,QAAO,oBAAoB;AAC1D,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,KAAK,GAAGb,cAAc,CAAEa,KAAK,IAAKA,KAAK,CAAC;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMW,OAAO,GAAGZ,MAAM,CAAC,CAAC;EAExB,SAASa,mBAAmBA,CAAA,EAAG;IAC7B,MAAMC,QAAQ,GAAGF,OAAO,CAACG,OAAO,CAACC,KAAK;IACtC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,QAAQ,CAAC,EAAE;MAAEK,IAAI,EAAE;IAAY,CAAC,CAAC;IACxD,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;IACrCG,IAAI,CAACM,QAAQ,GAAG,mBAAmB;IACnCN,IAAI,CAACO,KAAK,CAAC,CAAC;EACd;EAAC;EACD,SAASC,eAAeA,CAAA,EAAG;IACzB,IAAIC,QAAQ,GAAGjB,OAAO,CAACG,OAAO,CAACC,KAAK;IACpCd,IAAI,CAAC2B,QAAQ,CAAC;IACdlB,WAAW,CAAC,IAAI,CAAC;IACjBmB,UAAU,CAAC,MAAM;MACfnB,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,EAAE,KAAK,CAAC;EACX;EAAC;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACE3B,OAAA;MAAK4B,SAAS,EAAG,GAAEnC,MAAM,CAAC,WAAW,CAAE,EAAE;MAAAkC,QAAA,gBACvC3B,OAAA,CAACT,MAAM;QACLsC,KAAK,EAAC,OAAO;QACbC,KAAK,EAAC,SAAS;QACfF,SAAS,EAAEnC,MAAM,CAACsC,OAAQ;QAC1BC,OAAO,EAAER,eAAgB;QAAAG,QAAA,gBAEzB3B,OAAA;UAAM4B,SAAS,EAAEnC,MAAM,CAAC,aAAa,CAAE;UAAAkC,QAAA,eACrC3B,OAAA,CAACN,QAAQ;YAACuC,IAAI,EAAC,SAAS;YAACC,KAAK,EAAC,MAAM;YAACC,MAAM,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,EACNjC,QAAQ,GAAG,QAAQ,GAAG,MAAM;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACTvC,OAAA,CAACT,MAAM;QACLsC,KAAK,EAAC,OAAO;QACbC,KAAK,EAAC,SAAS;QACfF,SAAS,EAAEnC,MAAM,CAACsC,OAAQ;QAC1BC,OAAO,EAAEvB,mBAAoB;QAAAkB,QAAA,gBAE7B3B,OAAA;UAAM4B,SAAS,EAAEnC,MAAM,CAAC,aAAa,CAAE;UAAAkC,QAAA,eACrC3B,OAAA,CAACL,YAAY;YAACsC,IAAI,EAAC,SAAS;YAACC,KAAK,EAAC,MAAM;YAACC,MAAM,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,YAET;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNvC,OAAA;MAAK4B,SAAS,EAAEnC,MAAM,CAAC,oBAAoB,CAAE;MAAAkC,QAAA,eAC3C3B,OAAA;QACEwC,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAE;QACnB5B,KAAK,EAAE6B,IAAI,CAACC,SAAS,CAACrC,KAAK,CAACsC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAE;QAC7Cf,SAAS,EAAG,GAAEnC,MAAM,CAAC,WAAW,CAAE,EAAE;QACpCmD,IAAI,EAAC,eAAe;QACpBC,IAAI,EAAE,EAAG;QACTC,GAAG,EAAEtC;MAAQ;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACnC,EAAA,CA5DID,MAAM;EAAA,QACIX,cAAc;AAAA;AAAAuD,EAAA,GADxB5C,MAAM;AA6DZ,eAAeA,MAAM;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}