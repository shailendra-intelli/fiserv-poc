{"ast":null,"code":"/*! @azure/msal-react v2.0.7 2023-11-07 */\n'use strict';\n\nimport { useState, useEffect } from 'react';\nimport { AccountEntity } from '@azure/msal-browser';\nimport { useMsal } from './useMsal.js';\nimport { getAccountByIdentifiers } from '../utils/utilities.js';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction getAccount(instance, accountIdentifiers) {\n  if (!accountIdentifiers || !accountIdentifiers.homeAccountId && !accountIdentifiers.localAccountId && !accountIdentifiers.username) {\n    // If no account identifiers are provided, return active account\n    return instance.getActiveAccount();\n  }\n  return getAccountByIdentifiers(instance.getAllAccounts(), accountIdentifiers);\n}\n/**\n * Given 1 or more accountIdentifiers, returns the Account object if the user is signed-in\n * @param accountIdentifiers\n */\nfunction useAccount(accountIdentifiers) {\n  const {\n    instance,\n    inProgress,\n    logger\n  } = useMsal();\n  const [account, setAccount] = useState(() => getAccount(instance, accountIdentifiers));\n  useEffect(() => {\n    setAccount(currentAccount => {\n      const nextAccount = getAccount(instance, accountIdentifiers);\n      if (!AccountEntity.accountInfoIsEqual(currentAccount, nextAccount, true)) {\n        logger.info(\"useAccount - Updating account\");\n        return nextAccount;\n      }\n      return currentAccount;\n    });\n  }, [inProgress, accountIdentifiers, instance, logger]);\n  return account;\n}\nexport { useAccount };","map":{"version":3,"names":["getAccount","instance","accountIdentifiers","homeAccountId","localAccountId","username","getActiveAccount","getAccountByIdentifiers","getAllAccounts","useAccount","inProgress","logger","useMsal","account","setAccount","useState","useEffect","currentAccount","nextAccount","AccountEntity","accountInfoIsEqual","info"],"sources":["D:\\react-typescript\\intelli-gui\\node_modules\\@azure\\msal-react\\src\\hooks\\useAccount.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { useState, useEffect } from \"react\";\nimport { AccountEntity, } from \"@azure/msal-browser\";\nimport { useMsal } from \"./useMsal\";\nimport { getAccountByIdentifiers } from \"../utils/utilities\";\nfunction getAccount(instance, accountIdentifiers) {\n    if (!accountIdentifiers ||\n        (!accountIdentifiers.homeAccountId &&\n            !accountIdentifiers.localAccountId &&\n            !accountIdentifiers.username)) {\n        // If no account identifiers are provided, return active account\n        return instance.getActiveAccount();\n    }\n    return getAccountByIdentifiers(instance.getAllAccounts(), accountIdentifiers);\n}\n/**\n * Given 1 or more accountIdentifiers, returns the Account object if the user is signed-in\n * @param accountIdentifiers\n */\nexport function useAccount(accountIdentifiers) {\n    const { instance, inProgress, logger } = useMsal();\n    const [account, setAccount] = useState(() => getAccount(instance, accountIdentifiers));\n    useEffect(() => {\n        setAccount((currentAccount) => {\n            const nextAccount = getAccount(instance, accountIdentifiers);\n            if (!AccountEntity.accountInfoIsEqual(currentAccount, nextAccount, true)) {\n                logger.info(\"useAccount - Updating account\");\n                return nextAccount;\n            }\n            return currentAccount;\n        });\n    }, [inProgress, accountIdentifiers, instance, logger]);\n    return account;\n}\n//# sourceMappingURL=useAccount.js.map"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AAKA,SAASA,UAAUA,CAACC,QAAQ,EAAEC,kBAAkB,EAAE;EAC9C,IAAI,CAACA,kBAAkB,IAClB,CAACA,kBAAkB,CAACC,aAAa,IAC9B,CAACD,kBAAkB,CAACE,cAAc,IAClC,CAACF,kBAAkB,CAACG,QAAS,EAAE;IAC3C;IACQ,OAAOJ,QAAQ,CAACK,gBAAgB,EAAE;EAC1C;EACI,OAAOC,uBAAuB,CAACN,QAAQ,CAACO,cAAc,EAAE,EAAEN,kBAAkB,CAAC;AACjF;AACA;AACA;AACA;AACA;AACO,SAASO,UAAUA,CAACP,kBAAkB,EAAE;EAC3C,MAAM;IAAED,QAAQ;IAAES,UAAU;IAAEC;EAAM,CAAE,GAAGC,OAAO,EAAE;EAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,MAAMf,UAAU,CAACC,QAAQ,EAAEC,kBAAkB,CAAC,CAAC;EACtFc,SAAS,CAAC,MAAM;IACZF,UAAU,CAAEG,cAAc,IAAK;MAC3B,MAAMC,WAAW,GAAGlB,UAAU,CAACC,QAAQ,EAAEC,kBAAkB,CAAC;MAC5D,IAAI,CAACiB,aAAa,CAACC,kBAAkB,CAACH,cAAc,EAAEC,WAAW,EAAE,IAAI,CAAC,EAAE;QACtEP,MAAM,CAACU,IAAI,CAAC,+BAA+B,CAAC;QAC5C,OAAOH,WAAW;MAClC;MACY,OAAOD,cAAc;IACjC,CAAS,CAAC;EACV,CAAK,EAAE,CAACP,UAAU,EAAER,kBAAkB,EAAED,QAAQ,EAAEU,MAAM,CAAC,CAAC;EACtD,OAAOE,OAAO;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}