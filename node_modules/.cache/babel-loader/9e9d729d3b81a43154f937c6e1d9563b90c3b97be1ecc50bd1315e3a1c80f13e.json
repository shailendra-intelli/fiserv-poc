{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\common\\\\SignInButton.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"../../config/authConfig\";\nimport { useNavigate } from \"react-router-dom\";\n\n/**\r\n * Renders a drop down button with child buttons for logging in with a popup or redirect\r\n * Note the [useMsal] package\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignInButton = () => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const navigate = useNavigate();\n  const handleLogin = async loginType => {\n    if (loginType === \"popup\") {\n      try {\n        const data = await instance.loginPopup(loginRequest);\n        if (data) {\n          navigate(\"/dashboard\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    } else if (loginType === \"redirect\") {\n      instance.loginRedirect(loginRequest).catch(e => {\n        console.log(e);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleLogin(\"popup\"),\n    children: \"Sign in using Popup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(SignInButton, \"Mq20JlXMmyCKy+v5IbV3U/sy7oA=\", false, function () {\n  return [useMsal, useNavigate];\n});\n_c = SignInButton;\nvar _c;\n$RefreshReg$(_c, \"SignInButton\");","map":{"version":3,"names":["React","useMsal","loginRequest","useNavigate","jsxDEV","_jsxDEV","SignInButton","_s","instance","navigate","handleLogin","loginType","data","loginPopup","e","console","log","loginRedirect","catch","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/common/SignInButton.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from \"../../config/authConfig\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n/**\r\n * Renders a drop down button with child buttons for logging in with a popup or redirect\r\n * Note the [useMsal] package\r\n */\r\n\r\nexport const SignInButton = () => {\r\n  const { instance } = useMsal();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (loginType: string) => {\r\n    if (loginType === \"popup\") {\r\n      try {\r\n        const data: any = await instance.loginPopup(loginRequest);\r\n        if (data) {\r\n          navigate(\"/dashboard\");\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else if (loginType === \"redirect\") {\r\n      instance.loginRedirect(loginRequest).catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <button onClick={() => handleLogin(\"popup\")}>Sign in using Popup</button>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAKA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAS,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,WAAW,GAAG,MAAOC,SAAiB,IAAK;IAC/C,IAAIA,SAAS,KAAK,OAAO,EAAE;MACzB,IAAI;QACF,MAAMC,IAAS,GAAG,MAAMJ,QAAQ,CAACK,UAAU,CAACX,YAAY,CAAC;QACzD,IAAIU,IAAI,EAAE;UACRH,QAAQ,CAAC,YAAY,CAAC;QACxB;MACF,CAAC,CAAC,OAAOK,CAAC,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAChB;IACF,CAAC,MAAM,IAAIH,SAAS,KAAK,UAAU,EAAE;MACnCH,QAAQ,CAACS,aAAa,CAACf,YAAY,CAAC,CAACgB,KAAK,CAAEJ,CAAC,IAAK;QAChDC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAChB,CAAC,CAAC;IACJ;EACF,CAAC;EACD,oBACET,OAAA;IAAQc,OAAO,EAAEA,CAAA,KAAMT,WAAW,CAAC,OAAO,CAAE;IAAAU,QAAA,EAAC;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAE7E,CAAC;AAACjB,EAAA,CAvBWD,YAAY;EAAA,QACFL,OAAO,EACXE,WAAW;AAAA;AAAAsB,EAAA,GAFjBnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}