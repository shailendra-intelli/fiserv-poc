{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\main\\\\subtabs\\\\requestBody\\\\PathSubTabRequest.tsx\",\n  _s = $RefreshSig$();\nimport { useAppDispatch, useAppSelector } from \"../../../../store/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PathSubTabRequest = ({\n  pathName,\n  methodName\n}) => {\n  _s();\n  const paths = useAppSelector(state => state.main.paths);\n  const requestBody = paths[pathName][methodName];\n  const dispatch = useAppDispatch();\n  console.log(requestBody);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(PathSubTabRequest, \"wIIPYLX2c+xRZL1362hc1UiisLU=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = PathSubTabRequest;\nexport default PathSubTabRequest;\nvar _c;\n$RefreshReg$(_c, \"PathSubTabRequest\");","map":{"version":3,"names":["useAppDispatch","useAppSelector","jsxDEV","_jsxDEV","PathSubTabRequest","pathName","methodName","_s","paths","state","main","requestBody","dispatch","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/main/subtabs/requestBody/PathSubTabRequest.tsx"],"sourcesContent":["import { Checkbox, InputWithMovingLabel } from \"intelli-ui-components-library\";\r\nimport { updatePath } from \"../../mainTabsSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../store/hooks\";\r\n\r\nconst PathSubTabRequest = ({ pathName, methodName }: any) => {\r\n  const paths = useAppSelector((state) => state.main.paths);\r\n  const requestBody = paths[pathName][methodName];\r\n  const dispatch = useAppDispatch();\r\n  console.log(requestBody);\r\n\r\n  return (\r\n    <div className=\"mt-6\">\r\n      {/* <InputWithMovingLabel\r\n        inputProps={{\r\n          label: \"Description\",\r\n          name: \"requestBody.description\",\r\n          value: paths[pathName][methodName].requestBody.description,\r\n          onChange: (event) => {\r\n            dispatch(\r\n              updatePath({\r\n                pathName,\r\n                methodName,\r\n                methodKey: \"requestBody\",\r\n                data: {\r\n                  ...paths[pathName][methodName].requestBody,\r\n                  description: event.target.value,\r\n                },\r\n              })\r\n            );\r\n          },\r\n          type: \"text\",\r\n        }}\r\n        top\r\n      />\r\n      <div className=\"w-fit my-4\">\r\n        <Checkbox\r\n          checked={paths[pathName][methodName].requestBody.required}\r\n          value=\"Required\"\r\n          onChange={(event) => {\r\n            dispatch(\r\n              updatePath({\r\n                pathName,\r\n                methodName,\r\n                methodKey: \"requestBody\",\r\n                data: {\r\n                  ...paths[pathName][methodName].requestBody,\r\n                  required: !paths[pathName][methodName].requestBody.required,\r\n                },\r\n              })\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        {Object.entries(\r\n          paths[pathName][methodName].requestBody.content || {}\r\n        ).map(([key, value]) => (\r\n          <InputWithMovingLabel\r\n            inputProps={{\r\n              label: \"Media-Type\",\r\n              name: \"requestBody.description\",\r\n              value: key ?? \"\",\r\n              onChange: (e) => console.log(e),\r\n              type: \"text\",\r\n            }}\r\n            top\r\n            className=\"mb-4\"\r\n          />\r\n        ))}\r\n        <button\r\n          onClick={() => {\r\n            dispatch(\r\n              updatePath({\r\n                pathName,\r\n                methodName,\r\n                methodKey: \"requestBody\",\r\n                data: {\r\n                  ...paths[pathName][methodName].requestBody,\r\n                  content: {\r\n                    \"/\": {\r\n                      schema: {},\r\n                    },\r\n                    \"change/me\": {\r\n                      schema: {},\r\n                    },\r\n                  },\r\n                },\r\n              })\r\n            );\r\n          }}\r\n        >\r\n          Add Media\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\nexport default PathSubTabRequest;\r\n"],"mappings":";;AAEA,SAASA,cAAc,EAAEC,cAAc,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAMC,KAAK,GAAGP,cAAc,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EACzD,MAAMG,WAAW,GAAGH,KAAK,CAACH,QAAQ,CAAC,CAACC,UAAU,CAAC;EAC/C,MAAMM,QAAQ,GAAGZ,cAAc,CAAC,CAAC;EACjCa,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EAExB,oBACER,OAAA;IAAKY,SAAS,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAmFhB,CAAC;AAEV,CAAC;AAACZ,EAAA,CA5FIH,iBAAiB;EAAA,QACPH,cAAc,EAEXD,cAAc;AAAA;AAAAoB,EAAA,GAH3BhB,iBAAiB;AA6FvB,eAAeA,iBAAiB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}