{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript\\\\intelli-gui\\\\src\\\\components\\\\main\\\\CreateParam.tsx\",\n  _s = $RefreshSig$();\n// @ts-nocheck\nimport React from \"react\";\nimport { Card, Button } from \"intelli-ui-components-library\";\nimport { AddIcon } from \"../../assets/icons\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { updatePath } from \"../../store/reducers/mainTabsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateParam = () => {\n  _s();\n  const paths = useAppSelector(state => state.main.paths);\n  const dispatch = useAppDispatch();\n  const defaultParamObj = {\n    name: \"newParam\",\n    in: \"query\",\n    required: false,\n    schema: {\n      type: \"string\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      round: \"round\",\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.CardHeader, {\n        title: \"There are no parameters defined for this operation.\",\n        divider: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.CardAction, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button\n          //   children=\"Create Parameter\"\n          , {\n            size: \"md\",\n            variant: \"contained\",\n            round: \"round\",\n            color: \"primary\",\n            onClick: () => {\n              dispatch(updatePath({\n                pathName,\n                methodName,\n                methodKey: \"parameters\",\n                data: {\n                  ...paths[pathName][methodName].parameters,\n                  parameters: [defaultParamObj]\n                }\n              }));\n            },\n            className: \"mb-2\",\n            icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), \"Create Parameter\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CreateParam, \"wIIPYLX2c+xRZL1362hc1UiisLU=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = CreateParam;\nexport default CreateParam;\nvar _c;\n$RefreshReg$(_c, \"CreateParam\");","map":{"version":3,"names":["React","Card","Button","AddIcon","useAppDispatch","useAppSelector","updatePath","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateParam","_s","paths","state","main","dispatch","defaultParamObj","name","in","required","schema","type","children","round","style","width","CardHeader","title","divider","fileName","_jsxFileName","lineNumber","columnNumber","CardAction","size","variant","color","onClick","pathName","methodName","methodKey","data","parameters","className","icon","_c","$RefreshReg$"],"sources":["D:/react-typescript/intelli-gui/src/components/main/CreateParam.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport React from \"react\";\r\nimport { Card, Button } from \"intelli-ui-components-library\";\r\nimport { AddIcon, DeleteIcon } from \"../../assets/icons\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport { updatePath } from \"../../store/reducers/mainTabsSlice\";\r\n\r\nconst CreateParam = () => {\r\n  const paths = useAppSelector((state) => state.main.paths);\r\n  const dispatch = useAppDispatch();\r\n  const defaultParamObj = {\r\n    name: \"newParam\",\r\n    in: \"query\",\r\n    required: false,\r\n    schema: {\r\n      type: \"string\",\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Card\r\n        round=\"round\"\r\n        style={{\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Card.CardHeader\r\n          title=\"There are no parameters defined for this operation.\"\r\n          divider=\"dark\"\r\n        />\r\n        <Card.CardAction>\r\n          <div>\r\n            <Button\r\n              //   children=\"Create Parameter\"\r\n              size=\"md\"\r\n              variant=\"contained\"\r\n              round=\"round\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                dispatch(\r\n                  updatePath({\r\n                    pathName,\r\n                    methodName,\r\n                    methodKey: \"parameters\",\r\n                    data: {\r\n                      ...paths[pathName][methodName].parameters,\r\n                      parameters: [defaultParamObj],\r\n                    },\r\n                  })\r\n                );\r\n              }}\r\n              className=\"mb-2\"\r\n              icon={<AddIcon />}\r\n            >\r\n              <span>\r\n                <AddIcon />\r\n              </span>\r\n              Create Parameter\r\n            </Button>\r\n          </div>\r\n        </Card.CardAction>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateParam;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,QAAQ,+BAA+B;AAC5D,SAASC,OAAO,QAAoB,oBAAoB;AACxD,SAASC,cAAc,EAAEC,cAAc,QAAQ,mBAAmB;AAClE,SAASC,UAAU,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,KAAK,GAAGR,cAAc,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EACzD,MAAMG,QAAQ,GAAGZ,cAAc,CAAC,CAAC;EACjC,MAAMa,eAAe,GAAG;IACtBC,IAAI,EAAE,UAAU;IAChBC,EAAE,EAAE,OAAO;IACXC,QAAQ,EAAE,KAAK;IACfC,MAAM,EAAE;MACNC,IAAI,EAAE;IACR;EACF,CAAC;EACD,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA,CAACP,IAAI;MACHuB,KAAK,EAAC,OAAO;MACbC,KAAK,EAAE;QACLC,KAAK,EAAE;MACT,CAAE;MAAAH,QAAA,gBAEFf,OAAA,CAACP,IAAI,CAAC0B,UAAU;QACdC,KAAK,EAAC,qDAAqD;QAC3DC,OAAO,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACFzB,OAAA,CAACP,IAAI,CAACiC,UAAU;QAAAX,QAAA,eACdf,OAAA;UAAAe,QAAA,eACEf,OAAA,CAACN;UACC;UAAA;YACAiC,IAAI,EAAC,IAAI;YACTC,OAAO,EAAC,WAAW;YACnBZ,KAAK,EAAC,OAAO;YACba,KAAK,EAAC,SAAS;YACfC,OAAO,EAAEA,CAAA,KAAM;cACbtB,QAAQ,CACNV,UAAU,CAAC;gBACTiC,QAAQ;gBACRC,UAAU;gBACVC,SAAS,EAAE,YAAY;gBACvBC,IAAI,EAAE;kBACJ,GAAG7B,KAAK,CAAC0B,QAAQ,CAAC,CAACC,UAAU,CAAC,CAACG,UAAU;kBACzCA,UAAU,EAAE,CAAC1B,eAAe;gBAC9B;cACF,CAAC,CACH,CAAC;YACH,CAAE;YACF2B,SAAS,EAAC,MAAM;YAChBC,IAAI,eAAErC,OAAA,CAACL,OAAO;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAAAV,QAAA,gBAElBf,OAAA;cAAAe,QAAA,eACEf,OAAA,CAACL,OAAO;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,oBAET;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC,gBACP,CAAC;AAEP,CAAC;AAACrB,EAAA,CAzDID,WAAW;EAAA,QACDN,cAAc,EACXD,cAAc;AAAA;AAAA0C,EAAA,GAF3BnC,WAAW;AA2DjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}