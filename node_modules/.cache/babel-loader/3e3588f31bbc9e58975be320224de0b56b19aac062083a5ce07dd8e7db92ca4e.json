{"ast":null,"code":"/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\n\nimport { AuthError } from './AuthError.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst JoseHeaderErrorMessage = {\n  missingKidError: {\n    code: \"missing_kid_error\",\n    desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\"\n  },\n  missingAlgError: {\n    code: \"missing_alg_error\",\n    desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\"\n  }\n};\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nclass JoseHeaderError extends AuthError {\n  constructor(errorCode, errorMessage) {\n    super(errorCode, errorMessage);\n    this.name = \"JoseHeaderError\";\n    Object.setPrototypeOf(this, JoseHeaderError.prototype);\n  }\n  /**\n   * Creates an error thrown when keyId isn't set on JOSE header.\n   */\n  static createMissingKidError() {\n    return new JoseHeaderError(JoseHeaderErrorMessage.missingKidError.code, JoseHeaderErrorMessage.missingKidError.desc);\n  }\n  /**\n   * Creates an error thrown when algorithm isn't set on JOSE header.\n   */\n  static createMissingAlgError() {\n    return new JoseHeaderError(JoseHeaderErrorMessage.missingAlgError.code, JoseHeaderErrorMessage.missingAlgError.desc);\n  }\n}\nexport { JoseHeaderError, JoseHeaderErrorMessage };","map":{"version":3,"names":["missingAlgError","code","JoseHeaderError","AuthError","constructor","errorCode","errorMessage","Object","setPrototypeOf","prototype"],"sources":["D:\\react-typescript\\intelli-gui\\node_modules\\@azure\\msal-common\\src\\error\\JoseHeaderError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const JoseHeaderErrorMessage = {\n    missingKidError: {\n        code: \"missing_kid_error\",\n        desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\n    },\n    missingAlgError: {\n        code: \"missing_alg_error\",\n        desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\n    },\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class JoseHeaderError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"JoseHeaderError\";\n\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when keyId isn't set on JOSE header.\n     */\n    static createMissingKidError(): JoseHeaderError {\n        return new JoseHeaderError(\n            JoseHeaderErrorMessage.missingKidError.code,\n            JoseHeaderErrorMessage.missingKidError.desc\n        );\n    }\n\n    /**\n     * Creates an error thrown when algorithm isn't set on JOSE header.\n     */\n    static createMissingAlgError(): JoseHeaderError {\n        return new JoseHeaderError(\n            JoseHeaderErrorMessage.missingAlgError.code,\n            JoseHeaderErrorMessage.missingAlgError.desc\n        );\n    }\n}\n"],"mappings":";;;;;AAKA;AAEA;;AAEG;;;;;;;;;EAUDA,eAAA;IAEFC,IAAA;;EAEG;AACH;AACgB;AAOZ;;AAEG,MAAAC,eAAA,SAAAC,SAAA;EACHC,WAA4BA,CAAAC,SAAA,EAAAC,YAAmB;IAO/C,MAAAD,SAAA,EAAAC,YAAA;;IAEGC,MAAA,CAAAC,cAAA,OAAAN,eAAA,CAAAO,SAAA;;EAON"},"metadata":{},"sourceType":"module","externalDependencies":[]}