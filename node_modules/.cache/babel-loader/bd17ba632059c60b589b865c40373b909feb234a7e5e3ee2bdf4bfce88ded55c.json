{"ast":null,"code":"/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\n\nimport { Separators, APP_METADATA } from '../../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * APP_METADATA Cache\n *\n * Key:Value Schema:\n *\n * Key: appmetadata-<environment>-<client_id>\n *\n * Value:\n * {\n *      clientId: client ID of the application\n *      environment: entity that issued the token, represented as a full host\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n * }\n */\nclass AppMetadataEntity {\n  /**\n   * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n   */\n  generateAppMetadataKey() {\n    return AppMetadataEntity.generateAppMetadataCacheKey(this.environment, this.clientId);\n  }\n  /**\n   * Generate AppMetadata Cache Key\n   */\n  static generateAppMetadataCacheKey(environment, clientId) {\n    const appMetaDataKeyArray = [APP_METADATA, environment, clientId];\n    return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n  }\n  /**\n   * Creates AppMetadataEntity\n   * @param clientId\n   * @param environment\n   * @param familyId\n   */\n  static createAppMetadataEntity(clientId, environment, familyId) {\n    const appMetadata = new AppMetadataEntity();\n    appMetadata.clientId = clientId;\n    appMetadata.environment = environment;\n    if (familyId) {\n      appMetadata.familyId = familyId;\n    }\n    return appMetadata;\n  }\n  /**\n   * Validates an entity: checks for all expected params\n   * @param entity\n   */\n  static isAppMetadataEntity(key, entity) {\n    if (!entity) {\n      return false;\n    }\n    return key.indexOf(APP_METADATA) === 0 && entity.hasOwnProperty(\"clientId\") && entity.hasOwnProperty(\"environment\");\n  }\n}\nexport { AppMetadataEntity };","map":{"version":3,"names":["AppMetadataEntity","generateAppMetadataCacheKey","environment","clientId","APP_METADATA","join","Separators","CACHE_KEY_SEPARATOR","toLowerCase"],"sources":["D:\\react-typescript\\intelli-gui\\node_modules\\@azure\\msal-common\\src\\cache\\entities\\AppMetadataEntity.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { APP_METADATA, Separators } from \"../../utils/Constants\";\n\n/**\n * APP_METADATA Cache\n *\n * Key:Value Schema:\n *\n * Key: appmetadata-<environment>-<client_id>\n *\n * Value:\n * {\n *      clientId: client ID of the application\n *      environment: entity that issued the token, represented as a full host\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n * }\n */\nexport class AppMetadataEntity {\n    clientId: string;\n    environment: string;\n    familyId?: string;\n\n    /**\n     * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n     */\n    generateAppMetadataKey(): string {\n        return AppMetadataEntity.generateAppMetadataCacheKey(\n            this.environment,\n            this.clientId\n        );\n    }\n\n    /**\n     * Generate AppMetadata Cache Key\n     */\n    static generateAppMetadataCacheKey(\n        environment: string,\n        clientId: string\n    ): string {\n        const appMetaDataKeyArray: Array<string> = [\n            APP_METADATA,\n            environment,\n            clientId,\n        ];\n        return appMetaDataKeyArray\n            .join(Separators.CACHE_KEY_SEPARATOR)\n            .toLowerCase();\n    }\n\n    /**\n     * Creates AppMetadataEntity\n     * @param clientId\n     * @param environment\n     * @param familyId\n     */\n    static createAppMetadataEntity(\n        clientId: string,\n        environment: string,\n        familyId?: string\n    ): AppMetadataEntity {\n        const appMetadata = new AppMetadataEntity();\n\n        appMetadata.clientId = clientId;\n        appMetadata.environment = environment;\n        if (familyId) {\n            appMetadata.familyId = familyId;\n        }\n\n        return appMetadata;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAppMetadataEntity(key: string, entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(APP_METADATA) === 0 &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"environment\")\n        );\n    }\n}\n"],"mappings":";;;;;AAOA;;;;;;;;;;;;AAaG;AACH;;;;AAKI;;EAEG;AACH;AAOA;;IAEG,OAAAA,iBAAA,CAAAC,2BAAA,MAAAC,WAAA,OAAAC,QAAA;;EAeH;;;;iCAKGC,YAAA,EAC2BF,WAAA,EAgB9BC,QAAA,C;+BAGGE,IAAA,CAAAC,UAAA,CAAAC,mBAAA,EACuBC,WAAA;EAW7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}