{"ast":null,"code":"/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n//import { LogLevel } from \"@azure/msal-browser\";\n\n/**\r\n * Configuration object to be passed to MSAL instance on creation.\r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\r\n */\n\nexport const msalConfig = {\n  auth: {\n    clientId: `${process.env.REACT_APP_MS_AUTH_APP_ID}`,\n    authority: `${process.env.REACT_APP_MS_AUTH_AUTHORITY}`,\n    redirectUri: `${process.env.REACT_APP_MS_AUTH_REDIRECT_URI}`\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    // This configures where your cache will be stored\n    storeAuthStateInCookie: false // Set this to \"true\" if you are having issues on IE11 or Edge\n  },\n\n  system: {\n    // loggerOptions: {\n    //   loggerCallback: (level: any, message: any, containsPii: any) => {\n    //     if (containsPii) {\n    //       return;\n    //     }\n    //     switch (level) {\n    //       case LogLevel.Error:\n    //         console.error(message);\n    //         return;\n    //       case LogLevel.Info:\n    //         console.info(message);\n    //         return;\n    //       case LogLevel.Verbose:\n    //         console.debug(message);\n    //         return;\n    //       case LogLevel.Warning:\n    //         console.warn(message);\n    //         return;\n    //       default:\n    //         return;\n    //     }\n    //   },\n    // },\n  }\n};\n\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit:\r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\nexport const loginRequest = {\n  scopes: [\"user.read\"],\n  prompt: \"select_account\"\n};\n\n/**\r\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};","map":{"version":3,"names":["msalConfig","auth","clientId","process","env","REACT_APP_MS_AUTH_APP_ID","authority","REACT_APP_MS_AUTH_AUTHORITY","redirectUri","REACT_APP_MS_AUTH_REDIRECT_URI","cache","cacheLocation","storeAuthStateInCookie","system","loginRequest","scopes","prompt","graphConfig","graphMeEndpoint"],"sources":["D:/react-typescript/intelli-gui/src/config/authConfig.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n//import { LogLevel } from \"@azure/msal-browser\";\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation.\r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\r\n */\r\n\r\nexport const msalConfig = {\r\n  auth: {\r\n    clientId: `${process.env.REACT_APP_MS_AUTH_APP_ID}`,\r\n    authority: `${process.env.REACT_APP_MS_AUTH_AUTHORITY}`,\r\n    redirectUri: `${process.env.REACT_APP_MS_AUTH_REDIRECT_URI}`,\r\n  },\r\n  cache: {\r\n    cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\r\n    storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n  },\r\n  system: {\r\n    // loggerOptions: {\r\n    //   loggerCallback: (level: any, message: any, containsPii: any) => {\r\n    //     if (containsPii) {\r\n    //       return;\r\n    //     }\r\n    //     switch (level) {\r\n    //       case LogLevel.Error:\r\n    //         console.error(message);\r\n    //         return;\r\n    //       case LogLevel.Info:\r\n    //         console.info(message);\r\n    //         return;\r\n    //       case LogLevel.Verbose:\r\n    //         console.debug(message);\r\n    //         return;\r\n    //       case LogLevel.Warning:\r\n    //         console.warn(message);\r\n    //         return;\r\n    //       default:\r\n    //         return;\r\n    //     }\r\n    //   },\r\n    // },\r\n  },\r\n};\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit:\r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n  scopes: [\"user.read\"],\r\n  prompt: \"select_account\",\r\n};\r\n\r\n/**\r\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\r\nexport const graphConfig = {\r\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,UAAU,GAAG;EACxBC,IAAI,EAAE;IACJC,QAAQ,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,wBAAyB,EAAC;IACnDC,SAAS,EAAG,GAAEH,OAAO,CAACC,GAAG,CAACG,2BAA4B,EAAC;IACvDC,WAAW,EAAG,GAAEL,OAAO,CAACC,GAAG,CAACK,8BAA+B;EAC7D,CAAC;EACDC,KAAK,EAAE;IACLC,aAAa,EAAE,gBAAgB;IAAE;IACjCC,sBAAsB,EAAE,KAAK,CAAE;EACjC,CAAC;;EACDC,MAAM,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAEJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,MAAM,EAAE,CAAC,WAAW,CAAC;EACrBC,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,eAAe,EAAE;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}