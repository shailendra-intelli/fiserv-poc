import React, { ReactNode } from "react";
type CustomStyle = {
    [key: string]: any;
};
export interface CardProps {
    /** round props used for define the shape of the card */
    style?: CustomStyle;
    /** children props used for define that allows us to pass in any type of element */
    children?: ReactNode;
    /** raised props used for define the shadow of the Card if raise passed true */
    raised?: boolean;
    /** variant props used for define the shape of the card */
    variant?: string;
    /** className props used for define the custome class for a card */
    className?: string;
    /** round props used for define the shape of the card */
    round?: "flat" | "round" | "pill";
}
export interface CardActionProps {
    style?: CustomStyle;
    children?: ReactNode;
    raised?: boolean;
    variant?: string;
    className?: string;
    divider?: "light" | "dark";
}
export interface CardContentProps {
    style?: CustomStyle;
    children?: ReactNode;
    raised?: boolean;
    variant?: string;
    className?: string;
    divider?: "light" | "dark";
}
export interface CardHeaderProps {
    style?: CustomStyle;
    title: ReactNode;
    subheader?: ReactNode;
    titleTypographyProps?: any;
    action?: ReactNode;
    avatar?: ReactNode;
    children?: ReactNode;
    className?: string;
    divider?: "light" | "dark";
}
/** Cards are surfaces that display content and actions on a single topic. */
declare const Card: React.FC<CardProps> & {
    CardHeader: React.FC<CardHeaderProps>;
} & {
    CardAction: React.FC<CardActionProps>;
} & {
    CardContent: React.FC<CardContentProps>;
};
export default Card;
