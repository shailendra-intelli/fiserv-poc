import React, { ReactNode } from "react";
interface styleObj {
    backgroundColor?: string;
    color?: string;
}
export type ButtonProps = React.ComponentPropsWithRef<"button"> & {
    /** children props used for define that allows us to pass in any type of element */
    children?: ReactNode;
    /** disabled props used for define the disabled Button if disabled true */
    disabled?: boolean;
    /** The onclick event occurs when the user clicks on button */
    onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;
    /**style props used for create a cutsome css for styling */
    style?: styleObj;
    /** size props used for define the size of the Button */
    size?: "xs" | "sm" | "md" | "lg" | "xl" | "xxl";
    /** Color props used for define the  different different Color of the Button */
    color?: "primary" | "default" | "success" | "error" | "info" | "warning";
    /** round props used for define the shape of the button */
    round?: "round" | "pill" | "flat";
    /** variant props used for define the provide different look and feel options */
    variant?: "contained" | "outline" | "soft" | "text";
    /** className props used for define the custome class of the Button */
    className?: string;
    /** block props used for define the full width of the screen if block is true */
    block?: boolean;
    /** raised props used for define the shadow of the Button if raise passed true */
    raised?: boolean;
    /**isLoader props used to show the loader on button */
    isLoader?: boolean;
};
/**
 * This Component can be used to render Button of different types.
 * Such as Primary, Success, Primary Raised, etc
 *
 * Author
 * 		[Suraj Jaiswar]()
 *
 * Maintainers
 * 		[Suraj Jaiswar]()
 */
declare const Button: React.ForwardRefExoticComponent<Omit<ButtonProps, "ref"> & React.RefAttributes<HTMLButtonElement>>;
export default Button;
