import React, { ReactNode } from "react";
interface styleObj {
    backgroundColor?: string;
    color?: string;
}
export interface ButtonProps {
    children?: ReactNode;
    disabled?: boolean;
    onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;
    style?: styleObj;
    size?: "xs" | "sm" | "md" | "lg" | "xl" | "xxl";
    color?: "primary" | "default" | "success" | "error" | "info" | "warning";
    round?: "round" | "pill" | "flat";
    variant?: "contained" | "outline" | "soft" | "text";
    className?: string;
    block?: boolean;
    raised?: boolean;
    isLoader?: boolean;
}
export interface IconButtonProps {
    buttonProps: ButtonProps;
    icon?: ReactNode;
    iconText?: string;
    className?: string;
    onClick?: (e: any) => void;
}
declare const IconButton: React.FC<IconButtonProps>;
export default IconButton;
