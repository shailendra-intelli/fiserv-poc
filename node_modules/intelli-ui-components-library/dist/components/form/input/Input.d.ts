import React, { ReactNode } from "react";
export type InputProps = React.ComponentPropsWithRef<"input"> & {
    /**label props used to specify a label for an input element */
    label?: ReactNode | string;
    /**value props used to binding the data for an input element */
    value?: any;
    /**The placeholder props places text inside an input box */
    placeHolder?: string;
    /**type props used to define a type for an input element like it can be number , text, passowrd etc*/
    type?: any;
    /**children props used for define that allows us to pass in any type of element */
    children?: React.ReactNode;
    /**onChange props used for event watches for changes in an input field */
    onChange?: (event: any) => void;
    /** classNam props used for define for a custome class */
    className?: string;
    /**onFcous props used to select the element that has focus  */
    onFocus?: (e: any) => void;
    /**onBlur props used to remove the element that has focus  */
    onBlur?: (e: any) => void;
    /**as props used to make a input like textarea , input etc */
    as?: any;
    ref?: any;
    /**onPaste props used to pastes some content into an element */
    onPaste?: (event: any) => void;
};
/**In Input filed component users can enter or edit text. */
declare const Input: React.ForwardRefExoticComponent<Omit<InputProps, "ref"> & React.RefAttributes<HTMLTextAreaElement>>;
export default Input;
